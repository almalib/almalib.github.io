{"version":3,"sources":["./src/app/chat-navigate.service.ts","./src/app/comp/comp-routing.module.ts","./src/app/comp/comp.component.ts","./src/app/comp/comp.component.html","./src/app/comp/comp.module.ts","./src/app/comp/res/enum/common.enum.ts","./src/app/comp/res/view/comp-contacts/comp-contacts.component.ts","./src/app/comp/res/view/comp-contacts/comp-contacts.component.html","./src/app/comp/res/view/comp-dialogs/comp-dialogs.component.ts","./src/app/comp/res/view/comp-dialogs/comp-dialogs.component.html","./src/app/res/directive/lifecycle/lifecycle.directive.ts","./src/app/res/module/shared.module.ts"],"names":[],"mappings":"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","file":"comp-comp-module-es2015.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Injectable(\r\n  {\r\n    providedIn: \"root\"\r\n  }\r\n) export class ChatNavigateService {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public navigateToPersonalChat (\r\n    id: number\r\n  )\r\n  {\r\n    this.router.navigate(\r\n      [`/chat/${id}`]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public navigateToContact ()\r\n  {\r\n    this.router.navigate(\r\n      [`/chat`],\r\n      {\r\n        queryParams: {\r\n          contact: open ? 'show' : null\r\n        },\r\n        queryParamsHandling: \"merge\"\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public navigateToChats ()\r\n  {\r\n    this.router.navigate(\r\n      [`/chat`]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public controlChatProfile (\r\n    id: number,\r\n    open: boolean\r\n  )\r\n  {\r\n    this.router.navigate(\r\n      [`/chat/${id}`],\r\n      {\r\n        queryParams: {\r\n          profile: open ? 'show' : null\r\n        },\r\n        queryParamsHandling: \"merge\"\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {CompComponent} from \"./comp.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'chat',\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      view: 'all-chats'\r\n    },\r\n    // runGuardsAndResolvers: \"pathParamsOrQueryParamsChange\",\r\n    component: CompComponent,\r\n    // children: [\r\n    //   {\r\n    //     path: ':chatId',\r\n    //     data: {\r\n    //       view: 'personal'\r\n    //     },\r\n    //     component: CompComponent,\r\n    //   },\r\n    // ]\r\n  },\r\n  {\r\n    path: 'chat/:chatId',\r\n    data: {\r\n      view: 'personal'\r\n    },\r\n    component: CompComponent,\r\n  },\r\n  // {\r\n  //   path: 'contacts',\r\n  //   component: CompComponent,\r\n  // },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'chat'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompRoutingModule { }\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {StoreService} from '../store-service.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {animate, state, style, transition, trigger,} from '@angular/animations';\r\nimport {\r\n  ChatCategoryInterface,\r\n  ChatContactInterface,\r\n  ChatDialogInterface,\r\n  ChatMessage,\r\n  ChatUserActionStatusState,\r\n  ChatUserPresenceState,\r\n  filterMessageBySearchValue,\r\n  scrollToBot\r\n} from 's-chat';\r\nimport {ChatViewEnum} from \"./res/enum/common.enum\";\r\nimport {ChatNavigateService} from \"../chat-navigate.service\";\r\n\r\n// import {createTextMessage} from \"../../../../s-chat/src\";\r\n\r\n@Component({\r\n  selector: 'app-comp',\r\n  templateUrl: './comp.component.html',\r\n  styleUrls: ['./comp.component.scss'],\r\n  animations: [\r\n    trigger('flyInOut', [\r\n      state('in', style({ transform: 'translateY(0)' })),\r\n      transition('void => *', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate(300),\r\n      ]),\r\n      transition('* => void', [\r\n        animate(300, style({ transform: 'translateY(-100%)' })),\r\n      ]),\r\n    ]),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CompComponent implements OnInit {\r\n  @ViewChild('chatMessages') chatMessagesContainer: ElementRef<HTMLElement>;\r\n\r\n  /**\r\n   * */\r\n  public messages: ChatMessage[] = [];\r\n\r\n  /**\r\n   * */\r\n  public contacts: ChatContactInterface[] = [];\r\n\r\n  /**\r\n   * */\r\n  public allMessages: ChatMessage[] = [];\r\n\r\n  /**\r\n   * */\r\n  public allDialogs: ChatDialogInterface[] = [];\r\n\r\n  /**\r\n   * */\r\n  public openedDialog: ChatDialogInterface;\r\n\r\n  /**\r\n   * */\r\n  public categories: ChatCategoryInterface[] = [];\r\n\r\n  /**\r\n   * */\r\n  public showProfile = true;\r\n\r\n  /**\r\n   *\r\n   * */\r\n  public chatViewEnum = ChatViewEnum;\r\n\r\n  /**\r\n   *\r\n   * */\r\n  public chatView = ChatViewEnum.empty;\r\n\r\n  /**\r\n   * Стейт для показа контактов или диалогов\r\n   */\r\n  public showDialogs = true;\r\n\r\n  /**\r\n   *\r\n   */\r\n  public chatActionState: ChatUserActionStatusState;\r\n\r\n  /**\r\n   *\r\n   */\r\n  public chatPresenceState: ChatUserPresenceState;\r\n\r\n  constructor(\r\n    private chatStore: StoreService,\r\n    private chatNavigateService: ChatNavigateService,\r\n    private router: Router,\r\n    private cdRef: ChangeDetectorRef,\r\n    private activatedRoute: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.startSyncMessage();\r\n    this.activatedRoute.data.subscribe(\r\n      (data) => {\r\n      }\r\n    );\r\n\r\n    this.activatedRoute.queryParams.subscribe(\r\n      (params) => {\r\n        this.showProfile = params['profile'] === 'show'\r\n        this.showDialogs = params['contact'] !== 'show'\r\n      }\r\n    )\r\n\r\n\r\n    this.chatStore.getDialogs().subscribe((dataFromSever) => {\r\n      this.allDialogs = dataFromSever;\r\n      this.cdRef.markForCheck();\r\n    });\r\n\r\n    this.chatStore.getContacts().subscribe((dataFromSever) => {\r\n      this.contacts = dataFromSever;\r\n      this.cdRef.markForCheck();\r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(\r\n      (params) => {\r\n        if (params['chatId']) {\r\n          this.chatStore.getDialog(parseInt(params['chatId'] , 10)).subscribe(\r\n            (dialogFromServer) => {\r\n              if (dialogFromServer) {\r\n                this.openedDialog = dialogFromServer;\r\n                this.chatView = ChatViewEnum.personal;\r\n                this.setChatState(dialogFromServer.online);\r\n\r\n                // this.scrollToBot(5000);\r\n                this.cdRef.markForCheck();\r\n              }\r\n            }\r\n          )\r\n        }\r\n      }\r\n    )\r\n\r\n    this.chatStore.getCategories().subscribe((dataFromSever) => {\r\n      this.categories = dataFromSever;\r\n      this.cdRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * */\r\n  private setChatState (\r\n    online: boolean\r\n  )\r\n  {\r\n    this.chatActionState = !online ? undefined : ChatUserActionStatusState.writing;\r\n    this.chatPresenceState = this.chatActionState !== undefined ? ChatUserPresenceState.online : ChatUserPresenceState.offline;\r\n  }\r\n\r\n  public startSyncMessage (): void\r\n  {\r\n      this.chatStore.getMessages$().subscribe(\r\n        (messagesFromServer) => {\r\n          this.messages = this.allMessages =  messagesFromServer;\r\n          this.cdRef.markForCheck();\r\n        }\r\n      )\r\n  }\r\n\r\n  /**\r\n   * Лого\r\n   */\r\n  public getLogo() {\r\n    return this.chatStore.getLogo();\r\n  }\r\n\r\n  /**\r\n   * Сообщения\r\n   */\r\n  public getMessages() {\r\n    return this.messages;\r\n  }\r\n\r\n  /**\r\n   * Показ профиля юзера\r\n   * @param detail\r\n   */\r\n  public visibleProfile(\r\n    open: boolean\r\n  ) {\r\n    this.chatNavigateService.controlChatProfile(\r\n      this.openedDialog.id,\r\n      open\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Поиск сообщений\r\n   * @param detail\r\n   */\r\n  public searchPersonalMessage(value: string) {\r\n    this.messages = filterMessageBySearchValue(\r\n      value,\r\n      this.allMessages\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Сброс поика сообщений\r\n   */\r\n  public resetMessagesFilter() {\r\n    this.messages = this.allMessages;\r\n  }\r\n  /**\r\n   * Метод для переключения на контакты\r\n   */\r\n  public showDialogsOrDialogsToggle() {\r\n    this.showDialogs = !this.showDialogs;\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public navigateToPersonalChat (\r\n    dialog: ChatDialogInterface\r\n  )\r\n  {\r\n    this.chatNavigateService.navigateToPersonalChat(\r\n      dialog.id\r\n    );\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public sendTextMessage (\r\n    message: string\r\n  )\r\n  {\r\n    this.chatStore.sendTextMessage(\r\n      message\r\n    );\r\n    this.scrollToBot();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * */\r\n  public scrollToBot (\r\n    el = this.chatMessagesContainer,\r\n    timer = 50\r\n  )\r\n  {\r\n    scrollToBot(\r\n      el.nativeElement,\r\n      {\r\n        timer: timer\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"main-wrapper\">\r\n  <main>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-1 white-col\">\r\n          <s-adam-navigate\r\n            (visibleContacts)=\"showDialogsOrDialogsToggle()\"\r\n            [logo]=\"getLogo()\"\r\n          ></s-adam-navigate>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <app-comp-dialogs\r\n            *ngIf=\"showDialogs\"\r\n            [allDialogs]=\"allDialogs\"\r\n            [categories]=\"categories\"\r\n            (openDialog)=\"navigateToPersonalChat($event)\"\r\n          >\r\n          </app-comp-dialogs>\r\n          <app-comp-contacts\r\n            *ngIf=\"!showDialogs\"\r\n            [contacts]=\"contacts\"\r\n          ></app-comp-contacts>\r\n        </div>\r\n        <div class=\"col white-col\">\r\n          <section class=\"chat\" [ngSwitch]=\"chatView\">\r\n            <s-adam-no-chat *ngSwitchCase=\"chatViewEnum.empty\"></s-adam-no-chat>\r\n            <div\r\n              @flyInOut\r\n              *ngSwitchCase=\"chatViewEnum.personal\"\r\n              class=\"direct-comp\"\r\n            >\r\n              <s-adam-personal-header\r\n                [chatActionState]=\"this.chatActionState\"\r\n                [chatPresenceState]=\"this.chatPresenceState\"\r\n                [openedDialog]=\"openedDialog\"\r\n                (visibleUserProfile)=\"visibleProfile(true)\"\r\n                (searchPersonalMessage)=\"searchPersonalMessage($event.detail)\"\r\n                (resetMessagesFilter)=\"resetMessagesFilter()\">\r\n              </s-adam-personal-header>\r\n              <div class=\"chat-messages\">\r\n                <div class=\"chat-messages-inner\" #chatMessages lifecycle (afterViewInit)=\"this.scrollToBot($event.el)\">\r\n                  <div *ngFor=\"let message of getMessages()\">\r\n                    <message-from [message]=\"message\"></message-from>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <personal-footer (sendTextMessage)=\"sendTextMessage($event.detail)\"></personal-footer>\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <div class=\"col-3\" *ngIf=\"showProfile\">\r\n          <s-adam-profile (clickToShowDialogs)=\"visibleProfile(false)\" (clickToShowFolders)=\"null\" theme=\"mobile\" [categories]=\"categories\"></s-adam-profile>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</div>\r\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from \"@angular/core\";\r\nimport {CompComponent} from \"./comp.component\";\r\nimport {CompContactsComponent} from \"./res/view/comp-contacts/comp-contacts.component\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {CompRoutingModule} from \"./comp-routing.module\";\r\nimport {CompDialogsComponent} from \"./res/view/comp-dialogs/comp-dialogs.component\";\r\nimport {SharedModule} from \"../res/module/shared.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CompComponent,\r\n    CompContactsComponent,\r\n    CompDialogsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    CompRoutingModule,\r\n  ],\r\n  providers: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class CompModule {}\r\n","export enum ChatViewEnum {\r\n  personal,\r\n  empty\r\n}\r\n","import {ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {ChatContactInterface, filterContactBySearchValue} from 's-chat';\r\nimport { StoreService } from '../../../../store-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts',\r\n  templateUrl: './comp-contacts.component.html',\r\n  styleUrls: ['./comp-contacts.component.scss'],\r\n})\r\nexport class CompContactsComponent implements OnInit, OnChanges {\r\n\r\n  @Input() contacts: ChatContactInterface[] = [];\r\n\r\n  /**\r\n   * */\r\n  public allContacts: ChatContactInterface[] = [];\r\n\r\n  constructor(\r\n    private chatStore: StoreService,\r\n    private router: Router,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): Promise<void> | void {\r\n    this.filterContacts(this.lastSearchValue);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // this.allContacts = this.contacts;\r\n    this.allContacts = this.contacts;\r\n    this.filterContacts(this.lastSearchValue);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  public contactsFiltered: ChatContactInterface[] = [];\r\n\r\n  /**\r\n   *\r\n   */\r\n  public lastSearchValue: string;\r\n\r\n  /**\r\n   * Тема для модульного/мобильного чата\r\n   * */\r\n  public theme: 'mobile' | 'module' | 'comp' = 'comp';\r\n\r\n  /**\r\n   *\r\n   */\r\n  public getContacts() {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n\r\n  public disableInnerSearchContactState: boolean;\r\n\r\n  /**\r\n   *\r\n   * */\r\n  public filterContacts(\r\n    value: string\r\n  ) {\r\n    this.contacts = filterContactBySearchValue(\r\n      value,\r\n      this.allContacts\r\n    )\r\n  }\r\n}\r\n","<div class=\"contacts-column\">\r\n  <contacts-list-header\r\n    (searchContact)=\"filterContacts($event.detail)\"\r\n    [theme]=\"theme\"\r\n  ></contacts-list-header>\r\n  <div class=\"contacts\">\r\n    <div *ngFor=\"let dialog of contacts\">\r\n    <contact-card [theme]=\"theme\" [contact]=\"dialog\"></contact-card>\r\n  </div>\r\n</div>\r\n</div>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component, EventEmitter, Input, OnChanges,\r\n  OnInit, Output, SimpleChanges,\r\n} from '@angular/core';\r\nimport { StoreService } from '../../../../store-service.service';\r\nimport { Router } from '@angular/router';\r\nimport {ChatCategoryInterface, ChatDialogInterface, filterDialogsBySearchValue} from 's-chat';\r\n\r\n@Component({\r\n  selector: 'app-comp-dialogs',\r\n  templateUrl: './comp-dialogs.component.html',\r\n  styleUrls: ['./comp-dialogs.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CompDialogsComponent implements OnInit, OnChanges {\r\n\r\n  /**\r\n   * */\r\n  @Input() categories: ChatCategoryInterface[] = [];\r\n  /**\r\n   * */\r\n  @Input() allDialogs: ChatDialogInterface[] = [];\r\n\r\n  /**\r\n   * */\r\n  @Output() openDialog: EventEmitter<ChatDialogInterface> = new EventEmitter();\r\n\r\n  /**\r\n   * */\r\n  public dialogs: ChatDialogInterface[] = [];\r\n\r\n  /**\r\n   * Тема для модульного/мобильного чата\r\n   * */\r\n  public theme: 'mobile' | 'module' | 'comp' = 'comp';\r\n\r\n  constructor(\r\n    private chatStore: StoreService,\r\n    private router: Router,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.dialogs = this.allDialogs;\r\n  }\r\n\r\n  public compTheme() {\r\n    return this.chatStore.compThemeClass;\r\n  }\r\n\r\n  public searchDialogs(value: string): void {\r\n    this.dialogs = filterDialogsBySearchValue(\r\n      value,\r\n      this.allDialogs\r\n    );\r\n  }\r\n\r\n  /**\r\n   *   клик по кнопке категорий для фильтрации диалогов\r\n   */\r\n  public clickToCategory(input: ChatCategoryInterface) {\r\n    this.dialogs = this.chatStore.filterChatsByCategory(input, this.allDialogs);\r\n  }\r\n\r\n  /**\r\n   * */\r\n  public openChat(dialog: ChatDialogInterface) {\r\n    this.openDialog.emit(\r\n      dialog\r\n    )\r\n  }\r\n}\r\n","<div class=\"contacts-column\">\r\n  <contacts-list-header (searchContact)=\"searchDialogs($event.detail)\"     [theme]=\"theme\"\r\n  ></contacts-list-header>\r\n  <dialog-categories *ngIf=\"categories.length\" (clickToCategory)=\"clickToCategory($event.detail)\" [categories]=\"categories\"></dialog-categories>\r\n  <div class=\"contacts\" >\r\n    <div *ngFor=\"let dialog of dialogs\">\r\n      <dialog-card (clickToDialog)=\"openChat($event.detail)\" [theme]=\"compTheme()\" [mess]=\"dialog\" ></dialog-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {AfterViewInit, Directive, ElementRef, EventEmitter, Output} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[lifecycle]'\r\n})\r\nexport class LifecycleDirective  implements AfterViewInit{\r\n\r\n  @Output('afterViewInit') afterViewInit: EventEmitter<{el: ElementRef}> = new EventEmitter();\r\n\r\n  constructor(\r\n    private el: ElementRef\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.afterViewInit.emit(\r\n      {\r\n        el: this.el\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {LifecycleDirective} from \"../directive/lifecycle/lifecycle.directive\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LifecycleDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    LifecycleDirective\r\n  ],\r\n  providers: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class SharedModule {\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}