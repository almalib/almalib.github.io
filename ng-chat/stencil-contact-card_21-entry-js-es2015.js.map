{"version":3,"sources":["./node_modules/s-chat/dist/esm/contact-card_21.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACpB;AAC8H;AAC5E;;AAE/G,wDAAwD,oBAAoB,aAAa,sBAAsB,mBAAmB,mBAAmB,eAAe,0BAA0B,kBAAkB,kBAAkB,+CAA+C,WAAW,YAAY,kBAAkB,2BAA2B,sBAAsB,2BAA2B,oBAAoB,aAAa,qBAAqB,uBAAuB,WAAW,sBAAsB,8BAA8B,2BAA2B,UAAU,gBAAgB,iDAAiD,WAAW,2BAA2B,eAAe,gBAAgB,cAAc,8BAA8B,eAAe,cAAc,mBAAmB,8BAA8B,kBAAkB,oDAAoD,eAAe,cAAc,2DAA2D,eAAe,cAAc,iCAAiC,yBAAyB,eAAe,gBAAgB,kBAAkB,WAAW,iDAAiD,UAAU,sDAAsD,kBAAkB,SAAS,4DAA4D,uBAAuB,oDAAoD,YAAY;;AAEv4C;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,8BAA8B,4DAAW;AACzC;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,8BAA8B,EAAE,4DAAC,SAAS,sEAAsE,EAAE,4DAAC,SAAS,oBAAoB,EAAE,4DAAC,SAAS,uBAAuB,yBAAyB,iBAAiB,IAAI,EAAE,IAAI,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,SAAS,qBAAqB,sBAAsB,4DAAC,SAAS,wBAAwB;AACtc;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,KAAK,QAAQ;AACrC;AACA;AACA;;AAEA,6EAA6E,gCAAgC,2BAA2B,0BAA0B,4EAA4E,6BAA6B,mBAAmB,mBAAmB,8BAA8B,eAAe,eAAe,qCAAqC,eAAe,mDAAmD,oBAAoB,aAAa,sBAAsB,mBAAmB,kBAAkB,iBAAiB,iFAAiF,aAAa,4EAA4E,eAAe,cAAc,6CAA6C,gBAAgB,cAAc,sBAAsB,mBAAmB,WAAW,kBAAkB,kBAAkB,6CAA6C,kBAAkB,gBAAgB,kBAAkB,eAAe,2EAA2E,SAAS,2EAA2E,kBAAkB,kBAAkB,YAAY,yBAAyB,WAAW,YAAY,eAAe,aAAa,yGAAyG,gBAAgB,gBAAgB,uBAAuB,WAAW,kBAAkB,eAAe,uEAAuE,kBAAkB,QAAQ,UAAU,SAAS,eAAe,cAAc,8EAA8E,cAAc,uFAAuF,cAAc;;AAEp1D;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,4DAAW;AAC7C,6BAA6B,4DAAW;AACxC;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,qCAAqC,EAAE,4DAAC,SAAS,kGAAkG,EAAE,4DAAC,OAAO,oCAAoC,IAAI,4DAAC,SAAS,+BAA+B,gBAAgB,4DAAC,SAAS,+BAA+B,EAAE,4DAAC,WAAW,mGAAmG;AAC1gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,oBAAoB,aAAa,sBAAsB,mBAAmB,mBAAmB,eAAe,yBAAyB,kBAAkB,kBAAkB,6CAA6C,WAAW,YAAY,kBAAkB,2BAA2B,sBAAsB,0BAA0B,oBAAoB,aAAa,qBAAqB,uBAAuB,WAAW,sBAAsB,8BAA8B,0BAA0B,UAAU,gBAAgB,iDAAiD,gBAAgB,gBAAgB,0BAA0B,eAAe,gBAAgB,cAAc,6BAA6B,eAAe,cAAc,mBAAmB,6BAA6B,kBAAkB,kDAAkD,eAAe,cAAc,yDAAyD,eAAe,cAAc,gCAAgC,yBAAyB,eAAe,gBAAgB,kBAAkB,WAAW,+CAA+C,UAAU,mDAAmD,kBAAkB,SAAS,yDAAyD,uBAAuB,kDAAkD,YAAY,0BAA0B,0BAA0B,iBAAiB;;AAEv8C;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,6BAA6B,4DAAW;AACxC;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,qEAAqE,EAAE,4DAAC,SAAS,oBAAoB,EAAE,4DAAC,SAAS,yDAAyD,yBAAyB,cAAc,IAAI,EAAE,IAAI,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,SAAS,qBAAqB,mBAAmB,4DAAC,SAAS,wBAAwB,oBAAoB,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,SAAS,gBAAgB;AACzgB;AACA;AACA;AACA,mBAAmB,4DAAC,UAAU,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA,gCAAgC,6DAA6D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,KAAK,QAAQ;AACrC;AACA;AACA;;AAEA,gDAAgD,+BAA+B,oBAAoB,aAAa,sBAAsB,mBAAmB,kBAAkB,kBAAkB,YAAY,yDAAyD,eAAe,eAAe,oBAAoB,aAAa,qBAAqB,uBAAuB,sBAAsB,mBAAmB,kBAAkB,gBAAgB,cAAc,oCAAoC,4BAA4B,eAAe,YAAY,6BAA6B,+HAA+H,gCAAgC,+DAA+D,cAAc,gEAAgE,YAAY,0DAA0D,mBAAmB,2BAA2B,eAAe,oFAAoF,oBAAoB,4DAA4D,gBAAgB,sFAAsF,eAAe,oBAAoB,aAAa,sBAAsB,mBAAmB,iBAAiB,YAAY,kBAAkB,gBAAgB,oCAAoC,4BAA4B,4DAA4D,oBAAoB,sBAAsB,yCAAyC,WAAW;;AAEzmD;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,UAAU,SAAS,mGAAmG,oDAAoD;AAC/L,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,WAAW,YAAY,yBAAyB,mBAAmB,iCAAiC,kBAAkB,SAAS,WAAW,uBAAuB,UAAU,gCAAgC,oBAAoB,aAAa,sBAAsB,8BAA8B,mBAAmB,sBAAsB,mBAAmB,kBAAkB,4CAA4C,oCAAoC,eAAe,cAAc,uBAAuB,WAAW,kBAAkB,eAAe,+BAA+B,WAAW,qDAAqD,WAAW,kBAAkB,eAAe,YAAY,eAAe,aAAa,cAAc,kCAAkC,6BAA6B,sDAAsD,wBAAwB,gBAAgB,2BAA2B,wDAAwD,gCAAgC,+BAA+B,WAAW,YAAY,qBAAqB,mBAAmB,oBAAoB,aAAa,qBAAqB,uBAAuB,sBAAsB,mBAAmB,+BAA+B,cAAc,WAAW,YAAY,mBAAmB,yBAAyB,YAAY,kBAAkB,WAAW,mCAAmC,UAAU,kBAAkB,SAAS,WAAW,uBAAuB,iBAAiB,8BAA8B,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,uBAAuB,eAAe,yFAAyF,gCAAgC,wDAAwD,gCAAgC;;AAE/3D;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,SAAS,4GAA4G,EAAE,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,SAAS,sBAAsB,GAAG,4DAAC,SAAS,wDAAwD,IAAI,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,eAAe,4DAAC,WAAW,0GAA0G,KAAK,4DAAC,SAAS,8BAA8B,EAAE,4DAAC,OAAO,oCAAoC,IAAI,4DAAC,SAAS,yBAAyB;AACrpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAK;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,kBAAkB,SAAS,WAAW,uBAAuB,UAAU,+BAA+B,oBAAoB,aAAa,sBAAsB,8BAA8B,mBAAmB,sBAAsB,mBAAmB,kBAAkB,4CAA4C,oCAAoC,eAAe,cAAc,2CAA2C,WAAW,kBAAkB,eAAe,4CAA4C,cAAc,6CAA6C,cAAc,8BAA8B,WAAW,iBAAiB,mDAAmD,WAAW,kBAAkB,cAAc,eAAe,YAAY,eAAe,aAAa,oDAAoD,wBAAwB,gBAAgB,2BAA2B,wEAAwE,gBAAgB,0EAA0E,gBAAgB,sFAAsF,gCAAgC,sDAAsD,gCAAgC,8BAA8B,WAAW,YAAY,qBAAqB,mBAAmB,oBAAoB,aAAa,qBAAqB,uBAAuB,sBAAsB,mBAAmB,kCAAkC,UAAU,kBAAkB,SAAS,WAAW;;AAElmD;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAW;AAC7C,qCAAqC,4DAAW;AAChD,+BAA+B,4DAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,SAAS,0BAA0B,EAAE,4DAAC,SAAS,+DAA+D,EAAE,4DAAC,OAAO,mCAAmC,IAAI,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,UAAU,+CAA+C,EAAE,4DAAC,WAAW,+IAA+I,KAAK,4DAAC,SAAS,8BAA8B,EAAE,4DAAC,iBAAiB,qKAAqK;AACruB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,4DAAC,OAAO,kFAAkF,MAAM,4DAAC,OAAO,sFAAsF;AAC5Q;AACA;;AAEA,qFAAqF,aAAa,+BAA+B,2BAA2B,sBAAsB,mCAAmC,gBAAgB,oBAAoB,aAAa,kBAAkB,yBAAyB,gCAAgC,oBAAoB,aAAa,kBAAkB,yBAAyB,WAAW,8DAA8D,gBAAgB,0BAA0B,uBAAuB,kBAAkB,aAAa,yBAAyB,iCAAiC,yBAAyB,cAAc,eAAe,gBAAgB,6DAA6D,gBAAgB,gBAAgB,aAAa,+BAA+B,2BAA2B,sBAAsB,oCAAoC,gBAAgB,iCAAiC,oBAAoB,aAAa,kBAAkB,oBAAoB,sDAAsD,WAAW,YAAY,kBAAkB,kBAAkB,sBAAsB,2BAA2B,+DAA+D,gBAAgB,0BAA0B,uBAAuB,kBAAkB,aAAa,sBAAsB,iCAAiC,eAAe,cAAc,oBAAoB,aAAa,qBAAqB,kBAAkB,sBAAsB,8BAA8B,iBAAiB,gBAAgB,8DAA8D,gBAAgB,gBAAgB,aAAa,iCAAiC,2BAA2B,sBAAsB,kDAAkD,eAAe,gBAAgB,gCAAgC,kBAAkB,eAAe,cAAc,gBAAgB,6BAA6B,oBAAoB,aAAa,qBAAqB,uBAAuB,oDAAoD,yBAAyB,gBAAgB,mBAAmB,sBAAsB,oBAAoB,wHAAwH,gBAAgB,sFAAsF,gBAAgB,uHAAuH,gBAAgB,yDAAyD,gBAAgB,0BAA0B,2HAA2H,gBAAgB,iDAAiD,SAAS,6HAA6H,iBAAiB,0BAA0B,2HAA2H,gBAAgB,iDAAiD,SAAS,6HAA6H,iBAAiB;;AAEv1G;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,eAAe,4DAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,kBAAkB,oDAAmB;AACrC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,8BAA8B,EAAE,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,UAAU;AAC5G,wCAAwC,oBAAoB;AAC5D,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,0BAA0B,EAAE,4DAAC;AACvD;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,cAAc,4DAAC,SAAS,8BAA8B,EAAE,4DAAC,SAAS,0BAA0B;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAwB;AACzC;AACA,iBAAiB,oDAAwB;AACzC;AACA,iBAAiB,oDAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAmB;AACpC,wBAAwB,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,kBAAkB,0HAA0H;AACtM,iBAAiB,oDAAmB;AACpC,wBAAwB,4DAAC,SAAS,4BAA4B,yBAAyB,qBAAqB,IAAI,EAAE,EAAE,4DAAC,iBAAiB,+DAA+D;AACrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,KAAK,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,UAAU,iBAAiB,EAAE,4DAAC,OAAO,sCAAsC;AAChG;AACA;AACA,oBAAoB,4DAAC,UAAU,iBAAiB,EAAE,4DAAC,OAAO,+BAA+B;AACzF;AACA;AACA,oBAAoB,4DAAC,UAAU,iBAAiB,EAAE,4DAAC,OAAO,+BAA+B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAK;AACxB;AACA;AACA;AACA;;AAEA,wDAAwD,YAAY,kBAAkB,sBAAsB,kBAAkB,YAAY,WAAW,eAAe,WAAW;;AAE/K;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,gBAAgB,4DAAC,SAAS,4BAA4B,6BAA6B,oDAAwB;AAC3G;AACA;AACA;AACA;;AAEA,+CAA+C,eAAe,gBAAgB,8BAA8B,WAAW,OAAO,8BAA8B,oBAAoB,aAAa,iBAAiB,mBAAmB,oCAAoC,eAAe,iBAAiB,mCAAmC,oBAAoB,aAAa,yBAAyB,6BAA6B,2DAA2D,gBAAgB;;AAE1e;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,gBAAgB,4DAAC,SAAS,6BAA6B,EAAE,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,UAAU,wBAAwB,0BAA0B,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,UAAU,8BAA8B,mDAAmD,oDAAwB;AAClT;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,cAAc;;AAE5C;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,eAAe,4DAAC;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,mCAAmC,4DAAC,iBAAiB,6GAA6G,MAAM,4DAAC,kBAAkB,oFAAoF;AAChS;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA,sFAAsF,qBAAqB,0BAA0B,iBAAiB,WAAW,6BAA6B,yBAAyB,aAAa,kBAAkB,oBAAoB,YAAY,gBAAgB,kBAAkB,QAAQ,mCAAmC,2BAA2B,WAAW,qBAAqB,kBAAkB,YAAY,0BAA0B,yBAAyB;;AAE/e;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,eAAe,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,SAAS,eAAe,EAAE,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,qBAAqB,wDAAwD,mDAAI,EAAE,IAAI,4DAAC,SAAS,iBAAiB,4CAA4C,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,aAAa,gBAAgB;AACzY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAC,mBAAmB;AAC5C;AACA,qBAAqB,yEAAyE,mDAAW,EAAE;AAC3G;AACA,uBAAuB,4DAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,kBAAkB,4HAA4H,mDAAO,iBAAiB;AACxN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,oBAAoB;AACzC;AACA,iBAAiB,WAAW,mDAAO,cAAc,mDAAU,mDAAmD;AAC9G;AACA;AACA,oBAAoB,4DAAC,qBAAqB,0BAA0B,mDAAQ,uEAAuE;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,yBAAyB,yBAAyB,aAAa,0BAA0B,qBAAqB,6BAA6B,gBAAgB,2BAA2B,oBAAoB,uCAAuC,UAAU,uBAAuB;;AAEhV;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,0BAA0B,2EAA2E,GAAG,4DAAC,SAAS,oBAAoB;AAC9L,oBAAoB,4DAAC,kBAAkB,qCAAqC;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAA0B;AAC9D;AACA;AACA,2BAA2B;AAC3B;AACA,MAAM;AACN;AACA;;AAEA,kDAAkD,qBAAqB,mCAAmC,yBAAyB,yBAAyB,aAAa,4BAA4B,gBAAgB,2BAA2B,oBAAoB,0BAA0B,oBAAoB,aAAa,sBAAsB,mBAAmB,cAAc,kBAAkB,eAAe,gCAAgC,uBAAuB,iCAAiC,uBAAuB,gCAAgC,WAAW,YAAY,sBAAsB,2BAA2B,kBAAkB,0CAA0C,gBAAgB,eAAe,uCAAuC,eAAe,WAAW,gCAAgC,eAAe,iBAAiB,gBAAgB,sCAAsC,UAAU,uBAAuB;;AAEj6B;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAW;AACxC,6BAA6B,4DAAW;AACxC,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,0BAA0B,gBAAgB,GAAG,4DAAC,uBAAuB,8BAA8B,GAAG,4DAAC,SAAS,oBAAoB;AAC5L,mBAAmB,4DAAC,iBAAiB,8BAA8B;AACnE,SAAS;AACT;AACA;AACA;;AAEA,wDAAwD,kBAAkB,gBAAgB,2BAA2B,kBAAkB,qCAAqC,UAAU,uBAAuB;;AAE7M;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,4DAAW;AAC7C,qCAAqC,4DAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,uBAAuB,EAAE,4DAAC,4BAA4B,mFAAmF,GAAG,4DAAC,SAAS,yBAAyB;AACzM,mBAAmB,4DAAC,kBAAkB,mBAAmB;AACzD,SAAS,IAAI,4DAAC;AACd;AACA;AACA;;AAEA,oDAAoD,cAAc,qCAAqC,cAAc,eAAe,sCAAsC,cAAc,6BAA6B,mBAAmB,qCAAqC,kBAAkB;;AAE/R;AACA;AACA,QAAQ,4DAAgB;AACxB,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,4BAA4B,EAAE,4DAAC,SAAS,oBAAoB,EAAE,4DAAC,OAAO,8FAA8F,IAAI,4DAAC,OAAO,oGAAoG,EAAE,4DAAC,SAAS,8MAA8M,EAAE,4DAAC,UAAU,szCAAszC;AAC30D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,oBAAoB,aAAa,0BAA0B,sBAAsB,sBAAsB,mBAAmB,iBAAiB,yBAAyB,WAAW,YAAY,sBAAsB,2BAA2B,mBAAmB,mBAAmB,eAAe;;AAE1V;AACA;AACA,QAAQ,4DAAgB;AACxB,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,sBAAsB,EAAE,4DAAC,SAAS,sCAAsC,iDAAiD,EAAE,GAAG,4DAAC;AACzJ;AACA;AACA;;AAEA,uDAAuD,kBAAkB,WAAW,mCAAmC,2BAA2B,SAAS,mCAAmC,2BAA2B,cAAc;;AAEvO;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,gBAAgB,4DAAC,SAAS,uBAAuB;AACjD;AACA;AACA;;AAEA,kEAAkE,oBAAoB,aAAa,sBAAsB,8BAA8B,eAAe,aAAa,YAAY,gCAAgC,+CAA+C,aAAa,gCAAgC,YAAY,gCAAgC,oBAAoB,aAAa,0BAA0B,sBAAsB,qBAAqB,uBAAuB,sBAAsB,mBAAmB,qCAAqC,gBAAgB,mFAAmF,WAAW,YAAY,mBAAmB,yBAAyB,gBAAgB,0CAA0C,sBAAsB,8EAA8E,cAAc,eAAe,kDAAkD,WAAW,kBAAkB,kFAAkF,kBAAkB,WAAW,cAAc,YAAY,yBAAyB,aAAa,oFAAoF,kBAAkB,UAAU,QAAQ,mCAAmC,2BAA2B,eAAe,kCAAkC,cAAc,4CAA4C,cAAc,6CAA6C,cAAc,oCAAoC,mBAAmB,eAAe,6CAA6C,oBAAoB,aAAa,sBAAsB,mBAAmB,cAAc;;AAEtsD;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,4DAAW;AAC7C,qCAAqC,4DAAW;AAChD,mCAAmC,4DAAW;AAC9C;AACA;AACA,eAAe,4DAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,SAAS,kBAAkB,EAAE,4DAAC,SAAS,qEAAqE,EAAE,4DAAC,OAAO,2CAA2C,IAAI,4DAAC,SAAS,gBAAgB,EAAE,4DAAC,SAAS,6BAA6B,EAAE,4DAAC,SAAS,qBAAqB,kDAAkD,oDAAqB;AACrW,mBAAmB,4DAAC,SAAS,yBAAyB,MAAM,4DAAC,SAAS,0BAA0B,KAAK,4DAAC,iBAAiB,mFAAmF,IAAI,4DAAC,SAAS,qEAAqE,EAAE,4DAAC,OAAO,wCAAwC;AAC/U;AACA;AACA,oBAAoB,4DAAC,SAAS,+BAA+B,EAAE,4DAAC,SAAS,kCAAkC,EAAE,4DAAC,OAAO,0FAA0F,GAAG,4DAAC,WAAW,qGAAqG;AACnU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,yBAAyB,aAAa,cAAc,oCAAoC,UAAU,uBAAuB,+BAA+B,oBAAoB,aAAa,sBAAsB,8BAA8B,gCAAgC,iBAAiB,oBAAoB,iBAAiB,sDAAsD,kBAAkB,qDAAqD,oBAAoB,aAAa,sBAAsB,mBAAmB,eAAe,sDAAsD,eAAe,2BAA2B,eAAe,6CAA6C,cAAc,6BAA6B,qBAAqB,WAAW,wBAAwB,aAAa,eAAe,yBAAyB,WAAW,gBAAgB,oCAAoC,iBAAiB,oBAAoB,aAAa,0BAA0B,sBAAsB,sBAAsB,8BAA8B,kBAAkB,4DAA4D,WAAW,kBAAkB,eAAe,gEAAgE,gBAAgB,eAAe,mBAAmB,6BAA6B,gBAAgB,kCAAkC,iBAAiB,eAAe,eAAe,qCAAqC,sBAAsB,iBAAiB,cAAc,2DAA2D,gBAAgB,2BAA2B,iBAAiB,2EAA2E,gBAAgB,eAAe,eAAe,gBAAgB,cAAc,6BAA6B,qBAAqB,yCAAyC,cAAc,gCAAgC,mCAAmC,oBAAoB,aAAa,WAAW,6BAA6B,aAAa,sBAAsB,mBAAmB,6BAA6B,qBAAqB,eAAe,yDAAyD,kBAAkB,iBAAiB,eAAe,8BAA8B,oBAAoB,aAAa,sBAAsB,8BAA8B,+BAA+B,WAAW,kBAAkB,6BAA6B,aAAa,6BAA6B,qBAAqB,eAAe,qCAAqC,gCAAgC,cAAc,8BAA8B,gBAAgB,oCAAoC,mBAAmB,iCAAiC,aAAa,cAAc,mCAAmC,gBAAgB,eAAe,mBAAmB,cAAc,kCAAkC,eAAe,gBAAgB,cAAc,uCAAuC,oBAAoB,aAAa,sBAAsB,mBAAmB,sBAAsB,8BAA8B,4DAA4D,WAAW,yDAAyD,cAAc,6DAA6D,YAAY,aAAa,aAAa,WAAW,iCAAiC,WAAW,kBAAkB,mDAAmD,cAAc,6BAA6B,qBAAqB,yDAAyD,cAAc,2BAA2B,gBAAgB,kBAAkB,6CAA6C,eAAe;;AAEttH;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,4DAAW;AAC7C,4BAA4B,4DAAW;AACvC;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,SAAS,iEAAiE,EAAE,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,OAAO,oCAAoC,IAAI,4DAAC,SAAS,iBAAiB,sCAAsC,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,UAAU,+CAA+C,mDAAmD,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,OAAO,+CAA+C,IAAI,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,SAAS,uBAAuB,EAAE,4DAAC,SAAS,8BAA8B,EAAE,4DAAC,SAAS,iCAAiC,EAAE,4DAAC,UAAU,0DAA0D,EAAE,4DAAC,WAAW,sJAAsJ,IAAI,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,OAAO,mGAAmG,OAAO,4DAAC,SAAS,uBAAuB,EAAE,4DAAC,SAAS,gDAAgD,gFAAgF,4DAAC,SAAS,+BAA+B,EAAE,4DAAC,aAAa,4DAAC,WAAW,uBAAuB;AAC73C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,aAAa,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,SAAS,6BAA6B,EAAE,4DAAC,WAAW,kCAAkC,GAAG,4DAAC,WAAW,qBAAqB,EAAE,4DAAC;AAChM;AACA,KAAK;AACL;AACA;;AAEA,uEAAuE,cAAc,eAAe,mDAAmD,mBAAmB,6BAA6B,oBAAoB,aAAa,qBAAqB,uBAAuB,yBAAyB,GAAG,YAAY,IAAI,UAAU,KAAK,aAAa,iBAAiB,GAAG,YAAY,IAAI,UAAU,KAAK,aAAa,gDAAgD,6BAA6B,qBAAqB,gCAAgC,wBAAwB,2CAA2C,mCAAmC,iCAAiC,yBAAyB,6DAA6D,6BAA6B,qBAAqB,6DAA6D,6BAA6B,qBAAqB;;AAE55B;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,sBAAsB,mFAAmF;AACtK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,SAAS,uBAAuB,cAAc,4DAAC,qBAAqB,4DAAC,qBAAqB,4DAAC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oDAAyB;AACtC,oBAAoB,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,qBAAqB,2DAA2D;AACzI,aAAa,oDAAyB;AACtC,oBAAoB,4DAAC,UAAU,wBAAwB,EAAE,4DAAC,qBAAqB,sGAAsG;AACrL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oDAAqB;AAClC,mBAAmB,4DAAC,UAAU,qBAAqB;AACnD;AACA,mBAAmB,4DAAC,UAAU,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,SAAS,uBAAuB,2BAA2B,4DAAC,0BAA0B,yCAAyC,MAAM,4DAAC,4BAA4B,6CAA6C;AAC5N;AACA;;AAEqqB","file":"stencil-contact-card_21-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-063f1606.js';\nimport { T as Timer, d as dayjs } from './utils-f6ec1f87.js';\nimport { C as ChatMessageDirectionEnum, a as ChatMessageTypeEnum, f as filterContactBySearchValue, b as ChatUserPresenceState, c as ChatUserActionStatusState } from './index-582bc2f2.js';\nimport { l as logo, M as MessageMock, d as dialogs, c as categories, a as contacts } from './mock-5b093f4b.js';\n\nconst contactCardCss = \".m-contact-card.sc-contact-card{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-bottom:20px;cursor:pointer}.img-user.sc-contact-card{margin-right:20px;text-align:center}.img-user.sc-contact-card .img.sc-contact-card{width:50px;height:50px;border-radius:50%;background-position:center;background-size:cover}.info-card.sc-contact-card{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;width:100%;-ms-flex-pack:justify;justify-content:space-between}.unfo-user.sc-contact-card{width:80%;overflow:hidden}.comp.sc-contact-card .unfo-user.sc-contact-card{width:auto}.name-user.sc-contact-card{font-size:14px;font-weight:600;color:#4c567d}.message-user.sc-contact-card{font-size:14px;color:#979eab;white-space:nowrap}.data-message.sc-contact-card{text-align:center}.data-message.sc-contact-card .date.sc-contact-card{font-size:10px;color:#979eab}.data-message.sc-contact-card .new-message.sc-contact-card{font-size:10px;color:#979eab}.add-new-message.sc-contact-card{background-color:#ff7e7f;font-size:10px;padding:1px 5px;border-radius:50%;color:#fff}.comp.sc-contact-card .info-card.sc-contact-card{width:70%}.comp.sc-contact-card .m-contact-card.sc-contact-card{padding:20px 10px;margin:0}.comp.sc-contact-card .m-contact-card.sc-contact-card:hover{background-color:white}.comp.sc-contact-card .data-message.sc-contact-card{height:100%}\";\n\nconst ContactCard = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Данные выбора темы для Мобильная/Модульной версии\r\n         * */\r\n        this.theme = \"mobile\";\r\n        this.clickToContact = createEvent(this, \"clickToContact\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"contacts-list-card\" }, h(\"div\", { class: \"m-contact-card\", onClick: () => this.clickToDialogHandler() }, h(\"div\", { class: \"img-user\" }, h(\"div\", { class: \"img\", style: { backgroundImage: `url(${this.contact.img})` } })), h(\"div\", { class: \"info-card\" }, h(\"div\", { class: \"unfo-user\" }, h(\"div\", { class: \"name-user\" }, this.contact.name), h(\"div\", { class: \"message-user\" }, \" \", \"last seen \", this.createSendTime(this.contact.time.created))))))));\r\n    }\r\n    /**\r\n     * Метод выобра темы для Мобильная/Модульной версии\r\n     * */\r\n    getClassForHost() {\r\n        // console.log(this.theme)\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n    /**\r\n     * click to contact\r\n     * */\r\n    clickToDialogHandler() {\r\n        this.clickToContact.emit(this.contact);\r\n    }\r\n    /*\r\n     * last visit time\r\n     * **/\r\n    createSendTime(array) {\r\n        const timeNow = array;\r\n        let hours = timeNow.getHours();\r\n        let minutes = timeNow.getMinutes();\r\n        // add zero for minutes\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        // выводим время в минутах/часах\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n};\r\nContactCard.style = contactCardCss;\n\nconst contactsListHeaderCss = \".contacts-list-header.sc-contacts-list-header{border-bottom:1px solid #eaeaea;background-color:#eaeaea45;padding:20px 0px 10px 0px}.comp.sc-contacts-list-header .contacts-list-header.sc-contacts-list-header{background-color:transparent;padding:0 0 20px 0;border-bottom:none}.comp.sc-contacts-list-header{margin:0 -20px;padding:0 20px}.custom-link.sc-contacts-list-header{cursor:pointer}.contacts-list-description.sc-contacts-list-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;padding:0px 20px}.comp.sc-contacts-list-header .contacts-list-description.sc-contacts-list-header{display:none}.contacts-list-arraw-back.sc-contacts-list-header i.sc-contacts-list-header{font-size:14px;color:#979eab}.contacts-list-title.sc-contacts-list-header{font-weight:600;color:#4c567d;-ms-flex-align:center;align-items:center;width:100%;margin-left:-12px;text-align:center}.contacts-list-input.sc-contacts-list-header{text-align:center;margin:10px 0px;position:relative;padding:0 20px}.comp.sc-contacts-list-header .contacts-list-input.sc-contacts-list-header{margin:0}.contacts-list-input.sc-contacts-list-header input.sc-contacts-list-header{text-align:center;border-radius:5px;border:none;background-color:#eaeaea;width:100%;padding:5px;font-size:14px;outline:none}.comp.sc-contacts-list-header .contacts-list-input.sc-contacts-list-header input.sc-contacts-list-header{text-align:left;border-radius:0;background-color:white;width:100%;padding:10px 40px;font-size:13px}.contacts-list-input.sc-contacts-list-header i.sc-contacts-list-header{position:absolute;top:30%;z-index:2;left:39%;font-size:14px;color:#979eab}.comp.sc-contacts-list-header input.sc-contacts-list-header::-moz-placeholder{color:#979eab}.comp.sc-contacts-list-header input.sc-contacts-list-header::-webkit-input-placeholder{color:#979eab}\";\n\nconst ContactsListHeader = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Данные выбора темы для Мобильная/Модульной версии\r\n         * */\r\n        this.theme = \"mobile\";\r\n        this.clickToShowDialogs = createEvent(this, \"clickToShowDialogs\", 7);\r\n        this.searchContact = createEvent(this, \"searchContact\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"contacts-list-header\" }, h(\"div\", { class: \"contacts-list-description\" }, h(\"div\", { class: \"contacts-list-arraw-back custom-link \", onClick: () => this.clickToShowDialogsHandler() }, h(\"i\", { class: \"c-chat c-chat-arrow-left\" })), h(\"div\", { class: \"contacts-list-title\" }, \"Contacts\")), h(\"div\", { class: \"contacts-list-input\" }, h(\"input\", { type: \"text\", placeholder: \"Search..\", onInput: (e) => this.searchContactHandler(e.target.value) })))));\r\n    }\r\n    /**\r\n     * Метод выобра темы для Мобильная/Модульной версии\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n    /**\r\n     * show Dialogs\r\n     * */\r\n    clickToShowDialogsHandler() {\r\n        this.clickToShowDialogs.emit();\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    searchContactHandler(value) {\r\n        this.searchContact.emit(value);\r\n    }\r\n};\r\nContactsListHeader.style = contactsListHeaderCss;\n\nconst dialogCardCss = \".m-dialog-card.sc-dialog-card{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-bottom:20px;cursor:pointer}.img-user.sc-dialog-card{margin-right:20px;text-align:center}.img-user.sc-dialog-card .img.sc-dialog-card{width:50px;height:50px;border-radius:50%;background-position:center;background-size:cover}.info-card.sc-dialog-card{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;width:100%;-ms-flex-pack:justify;justify-content:space-between}.unfo-user.sc-dialog-card{width:80%;overflow:hidden}.mobile.sc-dialog-card .unfo-user.sc-dialog-card{max-width:250px;overflow:hidden}.name-user.sc-dialog-card{font-size:14px;font-weight:600;color:#4c567d}.message-user.sc-dialog-card{font-size:14px;color:#979eab;white-space:nowrap}.data-message.sc-dialog-card{text-align:center}.data-message.sc-dialog-card .date.sc-dialog-card{font-size:10px;color:#979eab}.data-message.sc-dialog-card .new-message.sc-dialog-card{font-size:10px;color:#979eab}.add-new-message.sc-dialog-card{background-color:#ff7e7f;font-size:10px;padding:1px 5px;border-radius:50%;color:#fff}.comp.sc-dialog-card .info-card.sc-dialog-card{width:70%}.comp.sc-dialog-card .m-dialog-card.sc-dialog-card{padding:20px 10px;margin:0}.comp.sc-dialog-card .m-dialog-card.sc-dialog-card:hover{background-color:white}.comp.sc-dialog-card .data-message.sc-dialog-card{height:100%}@media (max-width: 320px){.info-card.sc-dialog-card{max-width:210px}}\";\n\nconst DialogCard = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * карточка диалога\r\n         * */\r\n        this.theme = \"mobile\";\r\n        this.clickToDialog = createEvent(this, \"clickToDialog\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"m-dialog-card\", onClick: () => this.clickToDialogHandler() }, h(\"div\", { class: \"img-user\" }, h(\"div\", { class: this.mess.online ? \"img online\" : \"img\", style: { backgroundImage: `url(${this.mess.img})` } })), h(\"div\", { class: \"info-card\" }, h(\"div\", { class: \"unfo-user\" }, h(\"div\", { class: \"name-user\" }, this.mess.name), h(\"div\", { class: \"message-user\" }, this.mess.mess)), h(\"div\", { class: \"data-message\" }, h(\"div\", { class: \"date\" }, \" \", this.createSendTime(this.mess.time.created)), this.showNewMess(this.mess))))));\r\n    }\r\n    showNewMess(dialog) {\r\n        if (dialog.newMessage > 0) {\r\n            return h(\"span\", { class: \"add-new-message\" }, \" \", dialog.newMessage);\r\n        }\r\n    }\r\n    /**\r\n     * Управление по клику на диалог\r\n     * */\r\n    clickToDialogHandler() {\r\n        // this.clickToDialog.emit({ data: this.mess });\r\n        this.clickToDialog.emit(this.mess);\r\n    }\r\n    // public clickToLinkHandler() {\r\n    //   this.clickToLink.emit({place: ChatLinkTypeEnum.showPersonalDialog, data: this.mess })\r\n    // }\r\n    /**\r\n     * Метод выобра темы для ПК/Мобильная/Модульной версии\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n    /**\r\n     * Метод вывода времени отправки сообщения\r\n     * */\r\n    createSendTime(array) {\r\n        const timeNow = array;\r\n        let hours = timeNow.getHours();\r\n        let minutes = timeNow.getMinutes();\r\n        // add zero for minutes\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        // выводим время в минутах/часах\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n};\r\nDialogCard.style = dialogCardCss;\n\nconst dialogCategoriesCss = \"@charset \\\"UTF-8\\\";.btns-nav.sc-dialog-categories{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;overflow-x:scroll;overflow-y:hidden;height:30px}.btns-nav.sc-dialog-categories span.sc-dialog-categories{cursor:pointer;font-size:14px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;text-align:center;font-weight:600;color:#979eab;-webkit-transition:0.3s ease-in-out;transition:0.3s ease-in-out;padding:0 20px;height:30px;border-bottom:1px solid #ccc}.btns-nav.sc-dialog-categories span.sc-dialog-categories:hover,.btns-nav.sc-dialog-categories span.active.sc-dialog-categories{border-bottom:1px solid #5780f7}.btns-nav.sc-dialog-categories span.sc-dialog-categories:hover{color:#5780f7}.btns-nav.sc-dialog-categories span.active.sc-dialog-categories{color:black}.comp.sc-dialog-categories .btns-nav.sc-dialog-categories{border-bottom:none}.comp.sc-dialog-categories{margin:0 -20px}.comp.sc-dialog-categories .btns-nav.sc-dialog-categories span.sc-dialog-categories{padding-bottom:10px}.mobile.sc-dialog-categories .btns-nav.sc-dialog-categories{margin-top:10px}.module.sc-dialog-categories .btns-nav.sc-dialog-categories span.sc-dialog-categories{font-size:14px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0px 20px;height:30px;text-align:center;font-weight:600;-webkit-transition:0.3s ease-in-out;transition:0.3s ease-in-out}.module.sc-dialog-categories .btns-nav.sc-dialog-categories{-ms-flex-pack:start;justify-content:start}.sc-dialog-categories::-webkit-scrollbar{height:0px}\";\n\nconst DialogCategories = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         *\r\n         * */\r\n        this.theme = \"comp\";\r\n        /**\r\n         *\r\n         * */\r\n        this.categories = [];\r\n        this.clickToCategory = createEvent(this, \"clickToCategory\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"btns-nav\" }, this.getCategories(this.categories))));\r\n    }\r\n    /**\r\n     * Метод получения названий категорий\r\n     * */\r\n    getCategories(array) {\r\n        return array.map((item) => {\r\n            var _a;\r\n            return (h(\"span\", { class: { active: item.id === ((_a = this.lastClickedCategory) === null || _a === void 0 ? void 0 : _a.id) }, onClick: () => this.clickToCategoryHandler(item) }, item.name));\r\n        });\r\n    }\r\n    /**\r\n     * */\r\n    clickToCategoryHandler(item) {\r\n        this.clickToCategory.emit(this.lastClickedCategory = item);\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true\r\n        };\r\n    }\r\n};\r\nDialogCategories.style = dialogCategoriesCss;\n\nconst footerAudioCss = \".record-dot.sc-footer-audio{width:10px;height:10px;background-color:#ff7e7f;border-radius:100%}.personal-footer.sc-footer-audio{position:absolute;bottom:0;width:100%;background-color:white;z-index:1}.footer-wrapper.sc-footer-audio{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-radius:20px;-ms-flex-align:center;align-items:center;padding:10px 20px;-webkit-box-shadow:0px 0px 10px 1px #d4d4d4;box-shadow:0px 0px 10px 1px #d4d4d4;font-size:18px;color:#979eab}.audio.sc-footer-audio{width:20px;text-align:center;cursor:pointer}.input-wrapper.sc-footer-audio{width:100%}.input-wrapper.sc-footer-audio input.sc-footer-audio{width:100%;text-align:center;padding:10px 0;border:none;font-size:16px;outline:none;color:#4c567d}input.input-audio.sc-footer-audio{text-align:center !important}.comp.sc-footer-audio .footer-wrapper.sc-footer-audio{-webkit-box-shadow:none;box-shadow:none;border:1px solid lightgray}.mobile.sc-footer-audio .footer-wrapper.sc-footer-audio{border-radius:15px 15px 0px 0px}.animate-audio.sc-footer-audio{width:40px;height:40px;background-color:red;border-radius:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.recording-btn.sc-footer-audio{display:block;width:40px;height:40px;border-radius:100%;background-color:#bacbe3;opacity:0.2;position:absolute;right:10px}.c-chat-microphone.sc-footer-audio{z-index:1;position:absolute;top:24px;right:23px}.timer.sc-footer-audio{margin-left:10px}.record-audio.sc-footer-audio{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;font-size:14px}.module.sc-footer-audio .personal-footer.sc-footer-audio .footer-wrapper.sc-footer-audio{border-radius:15px 15px 0px 0px}.mobile.sc-footer-audio .footer-wrapper.sc-footer-audio{border-radius:15px 15px 0px 0px}\";\n\nconst FooterAudio = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Пропс с классом CSS\r\n         */\r\n        this.theme = \"comp\";\r\n        /**\r\n         * Курсор за пределами инпута остановка таймера\r\n         * */\r\n        this.mouseUpCallback = (event) => {\r\n            const state = this.outInputTag.contains(event.target);\r\n            this.recordFinished.emit(state);\r\n        };\r\n        this.recordFinished = createEvent(this, \"recordFinished\", 7);\r\n    }\r\n    componentDidLoad() {\r\n        document.addEventListener(\"mouseup\", this.mouseUpCallback);\r\n        this.startTimer();\r\n    }\r\n    disconnectedCallback() {\r\n        document.removeEventListener(\"mouseup\", this.mouseUpCallback);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"personal-footer\" }, h(\"div\", { class: \"footer-wrapper\", onMouseLeave: (e) => this.mouseOutInput(e), ref: (el) => (this.outInputTag = el) }, h(\"div\", { class: \"record-audio\" }, h(\"div\", { class: \"record-dot\" }), h(\"div\", { class: \"timer\", ref: (el) => (this.timerElement = el) })), h(\"div\", { class: \"input-wrapper\" }, h(\"form\", null, h(\"input\", { class: \"input-audio\", type: \"text\", placeholder: \"Release outside this field to cancel\", readonly: true }))), h(\"div\", { class: \"audio\", id: \"audio\" }, h(\"i\", { class: \"c-chat c-chat-microphone\" })), h(\"div\", { class: \"recording-btn\" })))));\r\n    }\r\n    /**\r\n     * смена класса\r\n     */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n    /**\r\n     * Старт таймера\r\n     * */\r\n    startTimer() {\r\n        const timer = new Timer();\r\n        timer.start((time) => {\r\n            {\r\n                this.timerElement.innerText = time;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Событие при MouseLeave\r\n     * */\r\n    mouseOutInput(e) {\r\n        console.log(\"mouseOutInput\", e);\r\n    }\r\n};\r\nFooterAudio.style = footerAudioCss;\n\nconst footerTextCss = \".personal-footer.sc-footer-text{position:absolute;bottom:0;width:100%;background-color:white;z-index:1}.footer-wrapper.sc-footer-text{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-radius:20px;-ms-flex-align:center;align-items:center;padding:10px 20px;-webkit-box-shadow:0px 0px 10px 1px #d4d4d4;box-shadow:0px 0px 10px 1px #d4d4d4;font-size:18px;color:#979eab}.file.sc-footer-text,.audio.sc-footer-text{width:20px;text-align:center;cursor:pointer}.file.sc-footer-text i.sc-footer-text:hover{color:#6328f8}.audio.sc-footer-text i.sc-footer-text:hover{color:#6328f8}.input-wrapper.sc-footer-text{width:100%;padding:0px 15px}.input-wrapper.sc-footer-text input.sc-footer-text{width:100%;text-align:center;color:#4c567d;padding:10px 0;border:none;font-size:16px;outline:none}.comp.sc-footer-text .footer-wrapper.sc-footer-text{-webkit-box-shadow:none;box-shadow:none;border:1px solid lightgray}.comp.sc-footer-text .input-wrapper.sc-footer-text input.sc-footer-text{text-align:left}.module.sc-footer-text .input-wrapper.sc-footer-text input.sc-footer-text{text-align:left}.module.sc-footer-text .personal-footer.sc-footer-text .footer-wrapper.sc-footer-text{border-radius:15px 15px 0px 0px}.mobile.sc-footer-text .footer-wrapper.sc-footer-text{border-radius:15px 15px 0px 0px}.animate-audio.sc-footer-text{width:40px;height:40px;background-color:red;border-radius:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.c-chat-microphone.sc-footer-text{z-index:1;position:absolute;top:24px;right:23px}\";\n\nconst FooterText = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Пропс с классом\r\n         */\r\n        this.theme = \"comp\";\r\n        /**\r\n         * Возможность записи аудио\r\n         */\r\n        this.canRecordAudio = false;\r\n        /**\r\n         * */\r\n        this.showAudioSendButton = true;\r\n        this.showSendFileFooter = createEvent(this, \"showSendFileFooter\", 7);\r\n        this.showRecordAudioFooter = createEvent(this, \"showRecordAudioFooter\", 7);\r\n        this.sendTextMessage = createEvent(this, \"sendTextMessage\", 7);\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    mouseEnter(event) {\r\n        console.log(\"mouseEnter\", event);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"personal-footer\" }, h(\"div\", { class: \"footer-wrapper\" }, h(\"div\", { class: \"file\", onClick: () => this.showSendFileFooter.emit() }, h(\"i\", { class: \"c-chat c-chat-paperclip\" })), h(\"div\", { class: \"input-wrapper\" }, h(\"form\", { onSubmit: (e) => this.sendMessageFromForm(e) }, h(\"input\", { type: \"text\", ref: (el) => (this.inputElement = el), onInput: (e) => this.switchIconInput(e.target.value), placeholder: \"Type something ...\" }))), h(\"div\", { class: \"audio\", id: \"audio\" }, h(SendButtonTag, { showAudio: this.canRecordAudio && this.showAudioSendButton, sendMessageFromButton: this.sendMessageFromButton.bind(this), clickOnAudio: this.showRecordAudioFooter }))))));\r\n    }\r\n    /**\r\n     * Смена класса\r\n     */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n    /**\r\n     * when sending message-from\r\n     * */\r\n    sendingNewMess() {\r\n        const input = this.inputElement;\r\n        if (input.value === \"\") {\r\n            return false;\r\n        }\r\n        else {\r\n            // скрипт отправки сообщения\r\n            // console.log(\"send mess:\", input.value);\r\n            this.sendTextMessage.emit(input.value);\r\n            // скрипт отправки сообщения\r\n            this.switchIconInput((input.value = \"\"));\r\n        }\r\n    }\r\n    /**\r\n     * send message from form\r\n     * */\r\n    sendMessageFromForm(e) {\r\n        e.preventDefault();\r\n        this.sendingNewMess();\r\n    }\r\n    /**\r\n     * send message from send button\r\n     * */\r\n    sendMessageFromButton() {\r\n        this.sendingNewMess();\r\n    }\r\n    /**\r\n     * Функция для для отправки сообщения\r\n     * */\r\n    switchIconInput(value) {\r\n        this.showAudioSendButton = !value.replace(/[\\t\\n\\r ]+/g, \"\").length;\r\n    }\r\n};\r\n/**\r\n * Смена иконки микрофона на стрелку\r\n * */\r\nconst SendButtonTag = (props) => {\r\n    return (props === null || props === void 0 ? void 0 : props.showAudio) ? (h(\"i\", { class: \"c-chat c-chat-microphone\", onMouseDown: () => props.clickOnAudio.emit() })) : (h(\"i\", { class: \"c-chat c-chat-location-arrow\", onClick: () => props.sendMessageFromButton() }));\r\n};\r\nFooterText.style = footerTextCss;\n\nconst messageFromCss = \".from-mess-wrapper.sc-message-from .mess-img.sc-message-from{height:150px;border-radius:20px 0 20px 20px;background-position:center;background-size:cover}.from-mess-wrapper.sc-message-from{margin:15px 0px;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end}.from-mess-wrap.sc-message-from{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;width:100%}.from-mess-wrapper.sc-message-from .from-mess.sc-message-from{max-width:350px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;padding:10px;border:1px solid #c7d0e8;border-radius:20px 0px 20px 20px;background-color:#ebf0fe;color:#799af8;font-size:14px;min-height:42px}.from-mess-wrapper.sc-message-from .mess-img.sc-message-from{max-width:350px;min-width:300px;height:150px;border-radius:20px 0 20px 20px;background-position:center;background-size:cover}.to-me-mess-wrapper.sc-message-from{margin:15px 0px}.to-me-mess-wrap.sc-message-from{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:end}.to-me-mess-wrap.sc-message-from .img.sc-message-from{width:30px;height:30px;margin-right:10px;border-radius:50%;background-size:cover;background-position:center}.to-me-mess-wrapper.sc-message-from .from-mess.sc-message-from{max-width:350px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;padding:10px;border:1px solid #ccc;border-radius:0px 20px 20px 20px;font-size:14px;color:#979eab;display:-ms-flexbox;display:flex;-ms-flex-align:unset;align-items:unset;-ms-flex-pack:justify;justify-content:space-between;background:white;min-height:42px}.to-me-mess-wrapper.sc-message-from .mess-img.sc-message-from{max-width:350px;min-width:300px;height:150px;border-radius:0px 20px 20px 20px;background-position:center;background-size:cover}.user-mess.sc-message-from .check.sc-message-from{font-size:10px;margin-left:5px}.system-message.sc-message-from{text-align:center;font-size:13px;color:#969696;margin:25px 0px;border-bottom:1px solid #ccc;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.system-message.sc-message-from div.sc-message-from{border:1px solid #969696;padding:5px 8px;border-radius:15px;background-color:#fff;margin-bottom:-15px}.module.sc-message-from .personal-message.sc-message-from .to-me-mess-wrapper.sc-message-from .mess-img.sc-message-from{min-width:260px}.module.sc-message-from .from-mess-wrapper.sc-message-from .from-mess.sc-message-from{max-width:260px}.module.sc-message-from .personal-message.sc-message-from .from-mess-wrapper.sc-message-from .mess-img.sc-message-from{min-width:260px}.module.sc-message-from .to-me-mess-wrap.sc-message-from{max-width:315px}@media (max-width: 414px){.from-mess-wrapper.sc-message-from .mess-img.sc-message-from,.to-me-mess-wrapper.sc-message-from .mess-img.sc-message-from{min-width:230px}.mess-img.sc-message-from .check.sc-message-from{left:90%}.from-mess-wrapper.sc-message-from .from-mess.sc-message-from,.to-me-mess-wrapper.sc-message-from .from-mess.sc-message-from{max-width:230px}}@media (max-width: 320px){.from-mess-wrapper.sc-message-from .mess-img.sc-message-from,.to-me-mess-wrapper.sc-message-from .mess-img.sc-message-from{min-width:200px}.mess-img.sc-message-from .check.sc-message-from{left:90%}.from-mess-wrapper.sc-message-from .from-mess.sc-message-from,.to-me-mess-wrapper.sc-message-from .from-mess.sc-message-from{max-width:200px}}\";\n\nconst MessageFrom = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return h(\"div\", null, this.message ? this.renderMessage(this.message) : '');\r\n    }\r\n    /**\r\n     * */\r\n    getWritingMessage(writing) {\r\n        if (!(writing === null || writing === void 0 ? void 0 : writing.length)) {\r\n            return '';\r\n        }\r\n        // @ts-ignore\r\n        const message = ({\r\n            sender: {\r\n                icon: writing[0].icon\r\n            },\r\n            type: ChatMessageTypeEnum.loading\r\n        });\r\n        return this.getToMeMessage(message);\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    getToMeMessage(message) {\r\n        return (h(\"div\", { class: \"to-me-mess-wrapper\" }, h(\"div\", { class: \"to-me-mess-wrap\" }, h(\"span\", { class: \"img\", style: {\r\n                backgroundImage: `url(${message.sender.icon})`,\r\n            } }), this.createType(message))));\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    getCenterMeMessage(message) {\r\n        return (h(\"div\", { class: \"system-message\" }, h(\"div\", null, this.checkTypeSystemMessage(message.content))));\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    getFromMeMessage(message) {\r\n        return (h(\"div\", null, h(\"div\", { class: \"from-mess-wrapper \" }, h(\"div\", { class: \"from-mess-wrap\" }, this.createType(message)))));\r\n    }\r\n    /**\r\n     * Определяем от кого сообщение\r\n     * @param message\r\n     */\r\n    renderMessage(message) {\r\n        switch (message.direction) {\r\n            case ChatMessageDirectionEnum.fromMe:\r\n                return this.getFromMeMessage(message);\r\n            case ChatMessageDirectionEnum.toMe:\r\n                return this.getToMeMessage(message);\r\n            case ChatMessageDirectionEnum.center:\r\n                return this.getCenterMeMessage(message);\r\n        }\r\n    }\r\n    /**\r\n     * Определяем тип сообщения\r\n     * @param message\r\n     */\r\n    createType(message) {\r\n        switch (message.type) {\r\n            case ChatMessageTypeEnum.text:\r\n                return (h(\"div\", { class: \"from-mess\" }, h(\"message-text\", { checkSendMess: this.checkSendMess(message), createSendTime: this.createSendTime(message.time.created), message: message })));\r\n            case ChatMessageTypeEnum.image:\r\n                return (h(\"div\", { class: \"mess-img\", style: { backgroundImage: `url(${this.message.content})` } }, h(\"message-img\", { checkSendMess: this.checkSendMess(message), message: message })));\r\n            // case ChatMessageTypeEnum.loading:\r\n            //   return (\r\n            //     <div class=\"from-mess\">\r\n            //       <div id=\"circleG\">\r\n            //         <div id=\"circleG_1\" class=\"circleG\"></div>\r\n            //         <div id=\"circleG_2\" class=\"circleG\"></div>\r\n            //         <div id=\"circleG_3\" class=\"circleG\"></div>\r\n            //       </div>\r\n            //     </div>\r\n            //   );\r\n        }\r\n    }\r\n    /**\r\n     * Метод вывода времени отправки\r\n     * */\r\n    createSendTime(array) {\r\n        const timeNow = array;\r\n        let hours = timeNow.getHours();\r\n        let minutes = timeNow.getMinutes();\r\n        // add zero for minutes\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n    /**\r\n     * Проверка статуса доставки сообщения\r\n     * */\r\n    checkSendMess(array) {\r\n        if (array.time.read) {\r\n            return (h(\"span\", { class: \"check\" }, h(\"i\", { class: \"c-chat c-chat-check-double\" })));\r\n        }\r\n        else if (array.time.delivery) {\r\n            return (h(\"span\", { class: \"check\" }, h(\"i\", { class: \"c-chat c-chat-check\" })));\r\n        }\r\n        else {\r\n            return (h(\"span\", { class: \"check\" }, h(\"i\", { class: \"c-chat c-chat-check\" })));\r\n        }\r\n    }\r\n    /**\r\n     * Проверка на тип полученного системного сообщения\r\n     * */\r\n    checkTypeSystemMessage(message) {\r\n        if (typeof message === \"string\") {\r\n            return message;\r\n        }\r\n        else if (typeof message === \"number\") {\r\n            return dayjs(message).format(\"DD MMMM\");\r\n        }\r\n    }\r\n};\r\nMessageFrom.style = messageFromCss;\n\nconst messageImgCss = \".mess-img-content.sc-message-img{height:100%;position:relative}.check.sc-message-img{position:absolute;bottom:10px;right:20px;font-size:10px;color:#fff}\";\n\nconst MessageImg = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"mess-img-content\" }, this.message.direction === ChatMessageDirectionEnum.fromMe\r\n            ? this.checkSendMess : ''));\r\n    }\r\n};\r\nMessageImg.style = messageImgCss;\n\nconst messageTextCss = \".check.sc-message-text{font-size:10px;margin-left:5px}.text-wrapper.sc-message-text{-ms-flex:1;flex:1}.info-wrapper.sc-message-text{display:-ms-flexbox;display:flex;text-align:right;white-space:nowrap}.personal-mess-date.sc-message-text{font-size:10px;margin-left:10px}.mess-content-wrap.sc-message-text{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around}.module.sc-message-text to-me-mess-wrapper.sc-message-text{max-width:315px}\";\n\nconst MessageText = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"mess-content-wrap\" }, h(\"div\", { class: \"text-wrapper\" }, h(\"span\", { class: \"message-text\" }, this.message.content)), h(\"div\", { class: \"info-wrapper\" }, h(\"span\", { class: \"personal-mess-date\" }, this.createSendTime), this.message.direction === ChatMessageDirectionEnum.fromMe\r\n            ? this.checkSendMess\r\n            : \"\")));\r\n    }\r\n};\r\nMessageText.style = messageTextCss;\n\nconst myComponentCss = \":host{display:block}\";\n\nconst MyComponent = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        // return <mobile-chat></mobile-chat>;\r\n        // return <module-chat></module-chat>;\r\n        return h(\"s-adam-chat\", null);\r\n    }\r\n};\r\nMyComponent.style = myComponentCss;\n\nconst personalFooterCss = \"\";\n\nconst PersonalFooter = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.theme = \"comp\";\r\n        /**\r\n         * Возможность записи аудио\r\n         */\r\n        this.canRecordAudio = false;\r\n        /**\r\n         * audio animation state\r\n         */\r\n        this.switchFooter = true;\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n    }\r\n    toggleFooter() {\r\n        this.switchFooter = !this.switchFooter;\r\n    }\r\n    onMouseUp(e) {\r\n        console.log(\"onMouseUp\", e.target);\r\n    }\r\n    render() {\r\n        return (h(\"div\", null, this.switchFooter ? (h(\"footer-text\", { canRecordAudio: this.canRecordAudio, theme: this.theme, onShowRecordAudioFooter: () => this.toggleFooter() })) : (h(\"footer-audio\", { theme: this.theme, onRecordFinished: (state) => this.recordFinished(state.detail) }))));\r\n    }\r\n    recordFinished(state) {\r\n        this.toggleFooter();\r\n        console.log(\"recordFinished\", { state });\r\n    }\r\n};\r\nPersonalFooter.style = personalFooterCss;\n\nconst sAdamChatCss = \".col-1.sc-s-adam-chat,.col.sc-s-adam-chat,.col-3.sc-s-adam-chat{padding:0 !important}.container.sc-s-adam-chat{max-width:1280px;width:100%}.main-wrapper.sc-s-adam-chat{background-color:#ebeff6;height:100vh;position:relative}main.sc-s-adam-chat{height:95vh;overflow:hidden;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:100%}.chat.sc-s-adam-chat{position:relative;height:95vh}.white-col.sc-s-adam-chat{background-color:#fdfdfd}\";\n\nconst SAdamChat = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         *Стейт для переключения на личный чат\r\n         */\r\n        this.dialogVisible = \"noChat\";\r\n        /**\r\n         * Стейт для показа профиля пользователя\r\n         */\r\n        this.profileVisible = false;\r\n        /**\r\n         * Стейт для показа контактов или диалогов\r\n         */\r\n        this.contactsVisible = true;\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"main-wrapper\" }, h(\"main\", null, h(\"div\", { class: \"container\" }, h(\"div\", { class: \"row\" }, h(\"div\", { class: \"col-1 white-col\" }, h(\"s-adam-navigate\", { onVisibleContacts: () => this.visibleContacts(), logo: logo })), h(\"div\", { class: \"col-3\" }, this.showContacts(this.contactsVisible)), h(\"div\", { class: \"col white-col\" }, h(\"section\", { class: \"chat\" }, this.showChat(this.dialogVisible))), this.showProfile(this.profileVisible))))));\r\n    }\r\n    /**\r\n     * Метод, который выводит необходимый чат\r\n     * @param content\r\n     */\r\n    showChat(content) {\r\n        switch (content) {\r\n            case \"showChat\":\r\n                return (h(\"s-adam-direct\", { onVisibleUserProfile: () => {\r\n                        this.visibleProfile();\r\n                    }, onSearchPersonalMessage: () => this.searchPersonalMessages(), message: MessageMock }));\r\n            case \"noChat\":\r\n                return h(\"s-adam-no-chat\", null);\r\n            //Компонент с версткой копирования\r\n            // <s-adam-copying></s-adam-copying>\r\n        }\r\n    }\r\n    showProfile(item) {\r\n        if (item === true) {\r\n            return (h(\"div\", { class: \"col-3\" }, h(\"user-folders\", { onClickToUserProfile: () => this.clickOnUserProfile(), onCreateFolder: (e) => this.createFolderHandler(e.detail), dialogs: dialogs, theme: \"comp\" })));\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    createFolderHandler(item) {\r\n        console.log(\"createFolderHandler\", item);\r\n    }\r\n    /**\r\n     * Показать контакты или диалоги\r\n     * @param item\r\n     */\r\n    showContacts(item) {\r\n        if (item === true) {\r\n            return (h(\"s-adam-dialogs\", { onSearchDialogs: () => this.searchDialogs(), onClickToDialog: () => {\r\n                    this.toggleChat();\r\n                }, dialogs: dialogs, categories: categories, onClickToCategory: () => this.clickToCategory() }));\r\n        }\r\n        else {\r\n            return (h(\"s-adam-contacts\", { theme: \"comp\", contacts: contacts, disableInnerSearchContactState: this.disableInnerSearchContactState }));\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    clickOnUserProfile() {\r\n    }\r\n    createFolder() {\r\n    }\r\n    /**\r\n     * click to Link\r\n     * */\r\n    clickToLink() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    searchDialogs() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    searchPersonalMessages() {\r\n    }\r\n    /**\r\n     *\r\n     * @param detail\r\n     */\r\n    clickToCategory() {\r\n    }\r\n    /**\r\n     * Метод для переключения на личный чат\r\n     * @param detail\r\n     */\r\n    toggleChat() {\r\n        this.dialogVisible = \"showChat\";\r\n    }\r\n    /**\r\n     * Метод для открытия и закрытия личного профиля\r\n     * @param detail\r\n     */\r\n    visibleProfile() {\r\n        this.profileVisible = !this.profileVisible;\r\n    }\r\n    /**\r\n     * Метод для переключения на контакты\r\n     */\r\n    visibleContacts() {\r\n        this.contactsVisible = !this.contactsVisible;\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    clickToShowFoldersHandler() {\r\n    }\r\n};\r\nSAdamChat.style = sAdamChatCss;\n\nconst sAdamContactsCss = \".contacts-column.sc-s-adam-contacts{background-color:#f7f8f9;padding:20px 20px 0 20px;height:100vh}.col-3.sc-s-adam-contacts{padding:0 !important}.contacts.sc-s-adam-contacts{overflow-y:auto;height:calc(100vh - 100px);padding-bottom:20px}.sc-s-adam-contacts::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamContacts = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Тема для модульного/мобильного чата\r\n         * */\r\n        this.theme = \"mobile\";\r\n    }\r\n    /**\r\n     * при изменении входящих контактов фильтрует данные заново\r\n     * */\r\n    watchContactsHandler(newValue) {\r\n        this.filterContacts(this.lastSearchValue, newValue);\r\n    }\r\n    componentWillRender() {\r\n        this.filterContacts(this.lastSearchValue);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"contacts-list-header\", { theme: this.theme, onSearchContact: (e) => this.filterContacts(e.detail) }), h(\"div\", { class: \"contacts\" }, this.contactsFiltered.map((dialog) => {\r\n            return (h(\"contact-card\", { theme: this.theme, contact: dialog }));\r\n        }))));\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    filterContacts(value, allContacts = this.contacts) {\r\n        this.lastSearchValue = value;\r\n        if (!this.disableInnerSearchContactState) {\r\n            this.contactsFiltered = filterContactBySearchValue(value, allContacts);\r\n        }\r\n    }\r\n    static get watchers() { return {\r\n        \"contacts\": [\"watchContactsHandler\"]\r\n    }; }\r\n};\r\nSAdamContacts.style = sAdamContactsCss;\n\nconst sAdamDialogsCss = \".col-3.sc-s-adam-dialogs{padding:0 !important}.contacts-column.sc-s-adam-dialogs{background-color:#f7f8f9;padding:20px 20px 0 20px;height:100vh}.contacts.sc-s-adam-dialogs{overflow-y:auto;height:calc(100vh - 129px);padding-bottom:20px}.dialog.sc-s-adam-dialogs{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin:30px 0;padding:20px 10px;cursor:pointer}.dialog.sc-s-adam-dialogs:hover{background-color:white}.dialog.sc-s-adam-dialogs:active{background-color:white}.dialog-photo.sc-s-adam-dialogs{width:40px;height:40px;background-size:cover;background-position:center;margin-right:15px}.dialog-message-caption.sc-s-adam-dialogs{font-weight:700;font-size:13px}.dialog-message-text.sc-s-adam-dialogs{font-size:12px;color:gray}.message-time.sc-s-adam-dialogs{font-size:10px;margin-left:auto;color:lightgray}.sc-s-adam-dialogs::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamDialogs = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Массив с элементами диалога\r\n         */\r\n        this.dialogs = [];\r\n        /**\r\n         * Тема для модульного/мобильного чата\r\n         * */\r\n        this.theme = \"mobile\";\r\n        /**\r\n         * массив категорий диалогов\r\n         */\r\n        this.categories = [];\r\n        this.clickToDialog = createEvent(this, \"clickToDialog\", 7);\r\n        this.searchDialogs = createEvent(this, \"searchDialogs\", 7);\r\n        this.clickToCategory = createEvent(this, \"clickToCategory\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"contacts-list-header\", { theme: \"comp\" }), h(\"dialog-categories\", { categories: this.categories }), h(\"div\", { class: \"contacts\" }, this.dialogs.map((dialog) => {\r\n            return h(\"dialog-card\", { theme: \"comp\", mess: dialog });\r\n        }))));\r\n    }\r\n};\r\nSAdamDialogs.style = sAdamDialogsCss;\n\nconst sAdamDirectCss = \".chat-messages.sc-s-adam-direct{padding:40px 20px;overflow-y:auto;height:calc(100vh - 168px);position:relative}.sc-s-adam-direct::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamDirect = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Личный диалог\r\n         */\r\n        this.message = [];\r\n        this.visibleUserProfile = createEvent(this, \"visibleUserProfile\", 7);\r\n        this.searchPersonalMessage = createEvent(this, \"searchPersonalMessage\", 7);\r\n    }\r\n    /**\r\n     * меняет статус (присутстия собеседников или контакта) в чате\r\n     * */\r\n    // @Method() async updateChatPresenceState(item: ChatUserPresenceState) {\r\n    //   this.chatPresenceState = item;\r\n    // }\r\n    render() {\r\n        return (h(\"div\", { class: \"direct-comp\" }, h(\"s-adam-personal-header\", { chatPresenceState: this.chatPresenceState, chatActionState: this.chatActionState }), h(\"div\", { class: \"chat-messages\" }, this.message.map((message) => {\r\n            return h(\"message-from\", { message: message });\r\n        })), h(\"personal-footer\", null)));\r\n    }\r\n};\r\nSAdamDirect.style = sAdamDirectCss;\n\nconst sAdamNavItemCss = \".c-chat.sc-s-adam-nav-item{color:#bacbe3}.hover-link.sc-s-adam-nav-item:hover{color:#6328f8;cursor:pointer}.hover-link.sc-s-adam-nav-item:active{color:#6328f8}.nav-item.sc-s-adam-nav-item{margin-bottom:20px}.nav-item-wrapper.sc-s-adam-nav-item{text-align:center}\";\n\nconst SAdamNavItem = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visibleContacts = createEvent(this, \"visibleContacts\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"nav-item-wrapper\" }, h(\"div\", { class: \"nav-item\" }, h(\"i\", { onClick: () => this.visibleContactsHandler(), class: \"c-chat c-chat-comment-alt hover-link\" })), h(\"a\", { target: \"_blank\", href: \"https://github.com/almalib/ng-chat\", class: \"nav-item c-chat hover-link\" }, h(\"svg\", { \"aria-hidden\": \"true\", focusable: \"false\", \"data-prefix\": \"fab\", \"data-icon\": \"github\", class: \"svg-inline--fa fa-github fa-w-16\", role: \"img\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 496 512\" }, h(\"path\", { fill: \"currentColor\", d: \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" })))));\r\n    }\r\n    /**\r\n     * Показать личный профиль юзера\r\n     */\r\n    visibleContactsHandler() {\r\n        this.visibleContacts.emit();\r\n    }\r\n};\r\nSAdamNavItem.style = sAdamNavItemCss;\n\nconst sAdamNavigateCss = \".nav-column.sc-s-adam-navigate{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;padding-top:20px}.logo.sc-s-adam-navigate{width:50px;height:50px;background-size:cover;background-position:center;margin-bottom:50px;border-radius:100%;cursor:pointer}\";\n\nconst SAdamNavigate = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visibleContacts = createEvent(this, \"visibleContacts\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"nav-column\" }, h(\"div\", { class: \"logo border-radius\", style: { backgroundImage: 'url(' + this.logo.logo + ')' } }), h(\"s-adam-nav-item\", null)));\r\n    }\r\n};\r\nSAdamNavigate.style = sAdamNavigateCss;\n\nconst sAdamNoChatCss = \".select-chat.sc-s-adam-no-chat{position:absolute;bottom:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);color:#8d8d8d}\";\n\nconst SAdamNoChat = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"select-chat\" }, \"Please select a chat\"));\r\n    }\r\n};\r\nSAdamNoChat.style = sAdamNoChatCss;\n\nconst sAdamPersonalHeaderCss = \".header.sc-s-adam-personal-header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;font-size:14px;padding:20px;height:80px;border-bottom:1px solid #f7f8f9}.header-search-block.sc-s-adam-personal-header{padding:20px;border-bottom:1px solid #f7f8f9;height:80px}.user.sc-s-adam-personal-header{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.user-name.sc-s-adam-personal-header{font-weight:700}.online-marker.sc-s-adam-personal-header,.offline-marker.sc-s-adam-personal-header{width:10px;height:10px;border-radius:100%;background-color:#5dc969;margin-left:5px}.offline-marker.sc-s-adam-personal-header{background-color:#ccc}.search-message.sc-s-adam-personal-header,.settings.sc-s-adam-personal-header{color:#bacbe3;cursor:pointer}.search-message-wrapper.sc-s-adam-personal-header{width:100%;position:relative}.search-message-wrapper.sc-s-adam-personal-header input.sc-s-adam-personal-header{padding:10px 40px;width:100%;margin:0 auto;border:none;background-color:#f7f8f9;outline:none}.search-message-wrapper.sc-s-adam-personal-header .c-chat.sc-s-adam-personal-header{position:absolute;left:15px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);cursor:pointer}.c-chat.sc-s-adam-personal-header{color:#bacbe3}.hover-link.sc-s-adam-personal-header:hover{color:#6328f8}.hover-link.sc-s-adam-personal-header:active{color:#6328f8}.nav-item.sc-s-adam-personal-header{margin-bottom:20px;cursor:pointer}.user-name-wrapper.sc-s-adam-personal-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;line-height:1}\";\n\nconst SAdamPersonalHeader = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Стейт для переключения окна поиска сообщений\r\n         */\r\n        this.searchVisible = false;\r\n        this.visibleUserProfile = createEvent(this, \"visibleUserProfile\", 7);\r\n        this.searchPersonalMessage = createEvent(this, \"searchPersonalMessage\", 7);\r\n        this.resetMessagesFilter = createEvent(this, \"resetMessagesFilter\", 7);\r\n    }\r\n    render() {\r\n        return h(\"div\", null, this.toggleHeader());\r\n    }\r\n    /**\r\n     * Переключатель стейта\r\n     */\r\n    toggleSearchVisible() {\r\n        this.searchVisible = !this.searchVisible;\r\n        this.resetMessagesFilter.emit();\r\n    }\r\n    /**\r\n     * Переключение шапки в личной переписке\r\n     */\r\n    toggleHeader() {\r\n        if (this.searchVisible === false) {\r\n            return (h(\"div\", { class: \"header\" }, h(\"div\", { class: \"search-message\", onClick: () => this.toggleSearchVisible() }, h(\"i\", { class: \"c-chat c-chat-search hover-link\" })), h(\"div\", { class: \"user\" }, h(\"div\", { class: \"user-name-wrapper\" }, h(\"div\", { class: \"user-name\" }, this.getNameUser()), this.chatPresenceState === ChatUserPresenceState.online\r\n                ? (h(\"div\", { class: \"online-marker\" })) : (h(\"div\", { class: \"offline-marker\" }))), h(\"user-status\", { chatActionState: this.chatActionState, chatPresenceState: this.chatPresenceState })), h(\"div\", { class: \"settings\", onClick: () => this.visibleUserProfileHandler() }, h(\"i\", { class: \"c-chat c-chat-cog hover-link\" }))));\r\n        }\r\n        else {\r\n            return (h(\"div\", { class: \"header-search-block\" }, h(\"div\", { class: \"search-message-wrapper\" }, h(\"i\", { class: \"c-chat c-chat-arrow-left hover-link\", onClick: () => this.toggleSearchVisible() }), h(\"input\", { onInput: (e) => this.searchPersonalMessageHandler(e), type: \"text\", placeholder: \"Search messages\" }))));\r\n        }\r\n    }\r\n    /**\r\n     * Вывод имени юзера в шапке личной переписки\r\n     * */\r\n    getNameUser() {\r\n        var _a;\r\n        return (_a = this.openedDialog) === null || _a === void 0 ? void 0 : _a.name;\r\n        // let name = \"\";\r\n        //\r\n        // this.message.forEach((item) => {\r\n        //   if (name.indexOf(item.sender.name) === -1) {\r\n        //     name = item.sender.name;\r\n        //   }\r\n        // });\r\n        //\r\n        // return name;\r\n    }\r\n    /**\r\n     * Показать личный профиль юзера\r\n     */\r\n    visibleUserProfileHandler() {\r\n        this.visibleUserProfile.emit();\r\n    }\r\n    /**\r\n     * Поиск сообщений в личной переписке\r\n     * @param e\r\n     */\r\n    searchPersonalMessageHandler(e) {\r\n        this.searchPersonalMessage.emit(e.target.value);\r\n    }\r\n};\r\nSAdamPersonalHeader.style = sAdamPersonalHeaderCss;\n\nconst userFoldersCss = \".folders-wrapper.sc-user-folders{background-color:#f7f8f9;padding:20px;overflow:auto}.sc-user-folders::-webkit-scrollbar{width:0px;background:transparent}.folders-title.sc-user-folders{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid #cccccc;padding:0px 20px;padding-bottom:20px;margin:0px -20px}.folders-title.sc-user-folders .title.sc-user-folders{padding-left:20px}.folders-title.sc-user-folders .left.sc-user-folders{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;cursor:pointer}.folders-title.sc-user-folders .right.sc-user-folders{cursor:pointer}.left-back.sc-user-folders{cursor:pointer}.left-back.sc-user-folders i.sc-user-folders{color:#979eab;-webkit-transition:0.3s ease;transition:0.3s ease;width:14px}.advice.sc-user-folders{padding:10px;font-size:14px;background-color:#ececec;color:grey;margin-top:30px}.user-folders-block.sc-user-folders{background:white;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;padding:10px 10px}.user-folders-block.sc-user-folders .c-chat.sc-user-folders{width:16px;text-align:center;cursor:pointer}.user-social-title.sc-user-folders,.media-title.sc-user-folders{font-weight:600;font-size:14px;margin-bottom:10px}.user-folder.sc-user-folders{margin-top:30px}.user-folder-link.sc-user-folders{padding:10px 0px;font-size:14px;cursor:pointer}.user-folders-blocks.sc-user-folders{background-color:#fff;max-height:360px;overflow:auto}.comp.sc-user-folders .user-folders-blocks.sc-user-folders{max-height:none;height:calc(100vh - 390px);min-height:121px}.user-folders-blocks.sc-user-folders ul.sc-user-folders li.sc-user-folders{list-style:none;cursor:pointer;font-size:14px;font-weight:600;color:#8d8d8d;-webkit-transition:0.3s ease;transition:0.3s ease}.list-item-wrapper.sc-user-folders:hover{color:#4c567d;border-bottom:1px solid #4c567d}.list-item-wrapper.sc-user-folders{display:-ms-flexbox;display:flex;width:100%;border-bottom:1px solid #ccc;padding:10px;-ms-flex-align:center;align-items:center;-webkit-transition:0.3s ease;transition:0.3s ease;cursor:pointer}.list-item-wrapper.sc-user-folders input.sc-user-folders{margin-right:20px;margin-left:10px;font-size:16px}.list-folders.sc-user-folders{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.delete-folder.sc-user-folders{width:40px;text-align:center;border-bottom:1px solid #ccc;padding:10px;-webkit-transition:0.3s ease;transition:0.3s ease;font-size:16px}.delete-folder.sc-user-folders:hover{border-bottom:1px solid darkred;color:darkred}.user-folders.sc-user-folders{margin:30px 0px}.user-folders-title.sc-user-folders{margin-bottom:10px}.folders-content.sc-user-folders{height:100vh;overflow:auto}.user-social-title.sc-user-folders{font-weight:600;font-size:14px;margin-bottom:10px;color:#4c567d}.user-social-name.sc-user-folders{font-size:14px;font-weight:600;color:#8d8d8d}.creating-folder-block.sc-user-folders{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.creating-folder-block.sc-user-folders form.sc-user-folders{width:100%}.creating-folder-block.sc-user-folders i.sc-user-folders{color:#4c567d}.creating-folder-block.sc-user-folders input.sc-user-folders{border:none;padding:10px;outline:none;width:100%}.icon-new-folder.sc-user-folders{width:20px;text-align:center}.icon-new-folder.sc-user-folders i.sc-user-folders{color:#bacbe3;-webkit-transition:0.3s ease;transition:0.3s ease}.icon-new-folder.sc-user-folders i.sc-user-folders:hover{color:#6328f8}.main-icon.sc-user-folders{margin-top:30px;text-align:center}.main-icon.sc-user-folders i.sc-user-folders{font-size:56px}\";\n\nconst UserFolders = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Задаем стиль для мобильной/пк версии\r\n         * */\r\n        this.theme = \"mobile\";\r\n        this.clickToUserProfile = createEvent(this, \"clickToUserProfile\", 7);\r\n        this.createFolder = createEvent(this, \"createFolder\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"folders-wrapper\" }, h(\"div\", { class: \"folders-title\" }, h(\"div\", { class: \"left\", onClick: () => this.clickToUserProfileHandler() }, h(\"div\", { class: \"left-back\" }, h(\"i\", { class: \"c-chat c-chat-arrow-left\" })), h(\"div\", { class: \"title\" }, \"\\u041F\\u0430\\u043F\\u043A\\u0438\")), h(\"div\", { class: \"right\" }, h(\"span\", { onClick: () => this.createFolderFromButton() }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"))), h(\"div\", { class: \"main-icon\" }, h(\"i\", { class: \"c-chat sc-btn-wrapper c-chat-folder\" })), h(\"div\", { class: \"folders-content\" }, h(\"div\", { class: \"user-folder\" }, h(\"div\", { class: \"user-folders-block\" }, h(\"div\", { class: \"creating-folder-block\" }, h(\"form\", { onSubmit: (e) => this.creatingFolderFromInputHandler(e) }, h(\"input\", { type: \"text\", placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0438\", ref: (el) => (this.inputElement = el) })), h(\"div\", { class: \"icon-new-folder\" }, h(\"i\", { class: \"c-chat sc-btn-wrapper c-chat-folder\", onClick: () => this.showInputCreateFolderHandler() }))))), h(\"div\", { class: \"user-folder\" }, h(\"div\", { class: \"user-folders-title user-social-title\" }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442\\u044B\"), h(\"div\", { class: \"user-folders-blocks\" }, h(\"ul\", null, h(Dialogs, { dialog: this.dialogs }))))))));\r\n    }\r\n    /**\r\n     * показывать инпут для создания папки\r\n     * */\r\n    showInputCreateFolderHandler() {\r\n        this.showInputCreateFolderState = !this.showInputCreateFolderState;\r\n    }\r\n    /**\r\n     *проверка и отправка данных на создание папки\r\n     * */\r\n    creatingFolderHandler() {\r\n        const input = this.inputElement;\r\n        if (input.value !== \"\") {\r\n            this.createFolder.emit({\r\n                name: input.value,\r\n                chats: [],\r\n            });\r\n            input.value = \"\";\r\n        }\r\n    }\r\n    /**\r\n     * create folder from send button\r\n     * */\r\n    createFolderFromButton() {\r\n        this.creatingFolderHandler();\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    creatingFolderFromInputHandler(e) {\r\n        e.preventDefault();\r\n        this.creatingFolderHandler();\r\n    }\r\n    /**\r\n     * переход на профиль пользователя\r\n     * */\r\n    clickToUserProfileHandler() {\r\n        this.clickToUserProfile.emit();\r\n    }\r\n    /**\r\n     * выводим класс\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n};\r\nconst Dialogs = (props) => {\r\n    return props.dialog.map((item) => {\r\n        // if (item.id !== \"all\") {\r\n        return (h(\"li\", null, h(\"div\", { class: \"list-folders\" }, h(\"div\", { class: \"list-item-wrapper\" }, h(\"input\", { type: \"checkbox\", id: item.name }), h(\"label\", { htmlFor: item.name }, h(\"div\", null, item.name))))));\r\n        // }\r\n    });\r\n};\r\nUserFolders.style = userFoldersCss;\n\nconst userStatusCss = \".status-user.sc-user-status span.sc-user-status{color:#4c567d;font-size:14px}.module.sc-user-status .status-user.sc-user-status{margin-bottom:-7px}.user-writing.sc-user-status{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}@-webkit-keyframes blink{0%{opacity:0.2}20%{opacity:1}100%{opacity:0.2}}@keyframes blink{0%{opacity:0.2}20%{opacity:1}100%{opacity:0.2}}.user-saving.sc-user-status span.sc-user-status{-webkit-animation-name:blink;animation-name:blink;-webkit-animation-duration:1.4s;animation-duration:1.4s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:both;animation-fill-mode:both}.user-saving.sc-user-status span.sc-user-status:nth-child(2){-webkit-animation-delay:0.2s;animation-delay:0.2s}.user-saving.sc-user-status span.sc-user-status:nth-child(3){-webkit-animation-delay:0.4s;animation-delay:0.4s}\";\n\nconst UserStatus = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Тема для блока\r\n         * */\r\n        this.theme = \"comp\";\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(StatusBlockElement, { chatActionState: this.chatActionState, chatPresenceState: this.chatPresenceState })));\r\n    }\r\n    /**\r\n     * Метод выобра темы для ПК/Мобильная/Модульной версии\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n};\r\nconst ChatAnimationDots = (props) => {\r\n    return (h(\"div\", { class: \"user-saving\" }, props.text, h(\"span\", null, \".\"), h(\"span\", null, \".\"), h(\"span\", null, \".\")));\r\n};\r\n/**\r\n * Компонент для вывода статуса действий\r\n * */\r\nconst UserActionStateElement = (props) => {\r\n    switch (props.chatActionState) {\r\n        case ChatUserActionStatusState.writing:\r\n            return (h(\"div\", { class: \"user-writing\" }, h(ChatAnimationDots, { text: \"\\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0435\\u0442\" })));\r\n        case ChatUserActionStatusState.audioRecording:\r\n            return (h(\"span\", { class: \"user-writing\" }, h(ChatAnimationDots, { text: \"\\u0437\\u0430\\u043F\\u0438\\u0441\\u044B\\u0432\\u0430\\u0435\\u0442 \\u0430\\u0443\\u0434\\u0438\\u043E\" })));\r\n        default:\r\n            return \"\";\r\n    }\r\n};\r\n/**\r\n * Компонент для вывода статуса присутствия пользоватея\r\n * */\r\nconst UserPresenceStateElement = (props) => {\r\n    switch (props.chatPresenceState) {\r\n        case ChatUserPresenceState.online:\r\n            return h(\"span\", { class: \"last-seen\" }, \"\\u043E\\u043D\\u043B\\u0430\\u0439\\u043D\");\r\n        default:\r\n            return h(\"span\", { class: \"last-seen\" }, \"\\u0431\\u044B\\u043B \\u043D\\u0435\\u0434\\u0430\\u0432\\u043D\\u043E\");\r\n    }\r\n};\r\n/**\r\n * Компонент контроллер\r\n * */\r\nconst StatusBlockElement = (props) => {\r\n    return (h(\"div\", { class: \"status-user\" }, props.chatActionState ? (h(UserActionStateElement, { chatActionState: props.chatActionState })) : (h(UserPresenceStateElement, { chatPresenceState: props.chatPresenceState }))));\r\n};\r\nUserStatus.style = userStatusCss;\n\nexport { ContactCard as contact_card, ContactsListHeader as contacts_list_header, DialogCard as dialog_card, DialogCategories as dialog_categories, FooterAudio as footer_audio, FooterText as footer_text, MessageFrom as message_from, MessageImg as message_img, MessageText as message_text, MyComponent as my_component, PersonalFooter as personal_footer, SAdamChat as s_adam_chat, SAdamContacts as s_adam_contacts, SAdamDialogs as s_adam_dialogs, SAdamDirect as s_adam_direct, SAdamNavItem as s_adam_nav_item, SAdamNavigate as s_adam_navigate, SAdamNoChat as s_adam_no_chat, SAdamPersonalHeader as s_adam_personal_header, UserFolders as user_folders, UserStatus as user_status };\n"],"sourceRoot":"webpack:///"}