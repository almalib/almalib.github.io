{"version":3,"sources":["./node_modules/s-chat/dist/esm/index-582bc2f2.js","./node_modules/s-chat/dist/esm/mobile-chat.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA,CAAC,8DAA8D;AAC/D;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE2W;;;;;;;;;;;;;ACrO3W;AAAA;AAAA;AAAA;AAAA;AAA+D;AAClC;AACuE;;AAEpG,4CAA4C,YAAY,aAAa,gBAAgB,YAAY,yBAAyB,mBAAmB,kBAAkB,OAAO,QAAQ,oCAAoC,4BAA4B,8CAA8C,sCAAsC,oDAAoD,YAAY,sDAAsD,YAAY,mCAAmC,UAAU,yCAAyC,iDAAiD,0BAA0B,kBAAkB,yCAAyC,2BAA2B,mBAAmB,oCAAoC,iDAAiD,yDAAyD,oCAAoC;;AAEh4B;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAO;AAC9B;AACA;AACA;AACA,wBAAwB,mDAAQ;AAChC;AACA;AACA;AACA,uBAAuB,mDAAW;AAClC;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAC;AAChB;AACA;AACA,uBAAuB,mDAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAC,oBAAoB,0XAA0X,SAAS,0EAA0E,mDAAU,yBAAyB;AAC7hB;AACA,wBAAwB,4DAAC,qBAAqB,yMAAyM,SAAS,8DAA8D;AAC9T;AACA,wBAAwB,4DAAC,oBAAoB,8BAA8B,mDAAU,8HAA8H;AACnN;AACA,wBAAwB,4DAAC,kBAAkB,4HAA4H,mDAAO,mBAAmB;AACjM;AACA,wBAAwB,4DAAC,mBAAmB,2EAA2E,SAAS,iOAAiO;AACjW;AACA,uBAAuB,4DAAC;AACxB;AACA;AACA;AACA;;AAEqC","file":"stencil-mobile-chat-entry-js-es2015.js","sourcesContent":["/**\r\n *\r\n * */\r\nvar ChatMessageDirectionEnum;\r\n(function (ChatMessageDirectionEnum) {\r\n    /**\r\n     * сообщения написал кто то другой, и получено мною\r\n     * */\r\n    ChatMessageDirectionEnum[ChatMessageDirectionEnum[\"toMe\"] = 0] = \"toMe\";\r\n    /**\r\n     * сообщения написал я\r\n     * */\r\n    ChatMessageDirectionEnum[ChatMessageDirectionEnum[\"fromMe\"] = 1] = \"fromMe\";\r\n    /**\r\n     * сообщения которое будет отображаться в центре\r\n     * */\r\n    ChatMessageDirectionEnum[ChatMessageDirectionEnum[\"center\"] = 2] = \"center\";\r\n})(ChatMessageDirectionEnum || (ChatMessageDirectionEnum = {}));\r\n/**\r\n *\r\n * */\r\nvar ChatMessageTypeEnum;\r\n(function (ChatMessageTypeEnum) {\r\n    /**\r\n     * сообщения написал кто то другой, и получено мною\r\n     * */\r\n    ChatMessageTypeEnum[\"text\"] = \"text\";\r\n    /**\r\n     * аудио сообщения записанное самим пользователем\r\n     * */\r\n    ChatMessageTypeEnum[\"liveAudio\"] = \"live-audio\";\r\n    /**\r\n     * аудио сообщение любое которое не записано самим пользователем\r\n     * */\r\n    ChatMessageTypeEnum[\"audio\"] = \"audio\";\r\n    /**\r\n     * фотка сделанная на устройстве пользователя и отправленная сразу\r\n     * */\r\n    ChatMessageTypeEnum[\"liveImage\"] = \"live-image\";\r\n    /**\r\n     * фотка из устройства отправителя\r\n     * */\r\n    ChatMessageTypeEnum[\"image\"] = \"image\";\r\n    /**\r\n     * видео сделанная на устройстве пользователя и отправленная сразу\r\n     * */\r\n    ChatMessageTypeEnum[\"liveVideo\"] = \"live-video\";\r\n    /**\r\n     * видео из устройства отправителя\r\n     * */\r\n    ChatMessageTypeEnum[\"video\"] = \"video\";\r\n    /**\r\n     * файл из устройства отправителя\r\n     * */\r\n    ChatMessageTypeEnum[\"file\"] = \"file\";\r\n    /**\r\n     * timestamp\r\n     * */\r\n    ChatMessageTypeEnum[\"date\"] = \"date\";\r\n    /**\r\n     * Печатает сообщение\r\n     */\r\n    ChatMessageTypeEnum[\"loading\"] = \"loading\";\r\n})(ChatMessageTypeEnum || (ChatMessageTypeEnum = {}));\r\nvar ChatLinkTypeEnum;\r\n(function (ChatLinkTypeEnum) {\r\n    ChatLinkTypeEnum[\"showFile\"] = \"showFile\";\r\n    ChatLinkTypeEnum[\"showDialogs\"] = \"showDialogs\";\r\n    ChatLinkTypeEnum[\"showPersonalDialog\"] = \"showPersonalDialog\";\r\n    ChatLinkTypeEnum[\"userNamePersonal\"] = \"user-name-personal\";\r\n    ChatLinkTypeEnum[\"addDialog\"] = \"\\\"add-dialog\\\"\";\r\n    ChatLinkTypeEnum[\"fromMobileContacts\"] = \"\\\"contacts\\\"\";\r\n    ChatLinkTypeEnum[\"fromMobileMenuBar\"] = \"menu-bar\";\r\n})(ChatLinkTypeEnum || (ChatLinkTypeEnum = {}));\r\n/**\r\n *\r\n * */\r\nfunction chatConvertWritingStatusToMessage(writing) {\r\n    return {\r\n        /**\r\n         * содержимое сообщения\r\n         * */\r\n        content: null,\r\n        /**\r\n         * тип сообщения\r\n         * */\r\n        type: ChatMessageTypeEnum.loading,\r\n        /** время создание */\r\n        time: {\r\n            /** время создания */\r\n            created: Date.now(),\r\n        },\r\n        /**\r\n         * направления сообщения\r\n         * */\r\n        direction: ChatMessageDirectionEnum.toMe,\r\n        /**\r\n         * отправитель\r\n         * */\r\n        sender: {\r\n            uid: writing.uid,\r\n            icon: writing.icon,\r\n            name: writing.name,\r\n            phone: writing.phone,\r\n        },\r\n    };\r\n}\r\n// /**\r\n//  * dialogue search\r\n//  * */\r\n//  export function ChatSearchDialog(value: string) {\r\n//   if (!this.disableInnerSearchDialogs) {\r\n//     this.dialogsState = filterDialogsBySearchValue(\r\n//       value,\r\n//       this.dialogs\r\n//     );\r\n//   }\r\n// }\r\n// /**\r\n//  * search for private messages\r\n//  * */\r\n//  export function ChatSearchPersonalMessages(value: string ) {\r\n//   if (!this.disableInnerSearchMessages) {\r\n//     this.messageState = filterMessageBySearchValue(\r\n//       value,\r\n//       this.message\r\n//     )\r\n//   }\r\n// }\r\n/**\r\n * создание текстового сообщения\r\n * */\r\nfunction createTextMessage(text, sender, options) {\r\n    return createMessage(ChatMessageTypeEnum.text, text, sender, options);\r\n}\r\n/**\r\n * создание сообщения\r\n * */\r\nfunction createMessage(type, content, sender, options) {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    return {\r\n        content: content,\r\n        sender: sender,\r\n        type: type,\r\n        direction: (_a = options === null || options === void 0 ? void 0 : options.direction) !== null && _a !== void 0 ? _a : ChatMessageDirectionEnum.fromMe,\r\n        time: {\r\n            created: (_c = (_b = options === null || options === void 0 ? void 0 : options.time) === null || _b === void 0 ? void 0 : _b.created) !== null && _c !== void 0 ? _c : new Date(),\r\n            delivery: (_e = (_d = options === null || options === void 0 ? void 0 : options.time) === null || _d === void 0 ? void 0 : _d.created) !== null && _e !== void 0 ? _e : null,\r\n            read: (_g = (_f = options === null || options === void 0 ? void 0 : options.time) === null || _f === void 0 ? void 0 : _f.created) !== null && _g !== void 0 ? _g : null\r\n        },\r\n    };\r\n}\r\n/**\r\n * filter message by search value\r\n * */\r\nfunction filterMessageBySearchValue(value, message) {\r\n    return value\r\n        ? message.filter((item) => {\r\n            return typeof item.content === \"string\"\r\n                ? item.content.toLowerCase().includes(value.toLowerCase())\r\n                : false;\r\n        })\r\n        : message;\r\n}\r\n/**\r\n * filter dialogs by search value\r\n * */\r\nfunction filterDialogsBySearchValue(value, dialogs) {\r\n    return value\r\n        ? dialogs.filter((item) => {\r\n            return typeof item.name === \"string\"\r\n                ? item.name.toLowerCase().includes(value.toLowerCase())\r\n                : false;\r\n        })\r\n        : dialogs;\r\n}\r\n/**\r\n * filter contact by search value\r\n * */\r\nfunction filterContactBySearchValue(value, contacts) {\r\n    return value\r\n        ? contacts.filter((item) => {\r\n            return typeof item.name === \"string\"\r\n                ? item.name.toLowerCase().includes(value.toLowerCase())\r\n                : false;\r\n        })\r\n        : contacts;\r\n}\r\n/**\r\n * filter dialogs by category id\r\n * */\r\nfunction filterDialogsByCategory(category, dialogs) {\r\n    return (category && category.id !== \"all\")\r\n        ? dialogs.filter((dialog) => dialog.category === category.id)\r\n        : dialogs;\r\n}\r\nvar ChatViewToShowEnum;\r\n(function (ChatViewToShowEnum) {\r\n    ChatViewToShowEnum[\"files\"] = \"files\";\r\n    ChatViewToShowEnum[\"dialogs\"] = \"dialogs\";\r\n    ChatViewToShowEnum[\"personal\"] = \"personal\";\r\n    ChatViewToShowEnum[\"profile\"] = \"profile\";\r\n    ChatViewToShowEnum[\"users\"] = \"users\";\r\n    ChatViewToShowEnum[\"contacts\"] = \"contacts\";\r\n    ChatViewToShowEnum[\"folders\"] = \"folders\";\r\n})(ChatViewToShowEnum || (ChatViewToShowEnum = {}));\r\nvar ChatUserActionStatusState;\r\n(function (ChatUserActionStatusState) {\r\n    ChatUserActionStatusState[\"writing\"] = \"writing\";\r\n    ChatUserActionStatusState[\"audioRecording\"] = \"audio-recording\";\r\n})(ChatUserActionStatusState || (ChatUserActionStatusState = {}));\r\nvar ChatUserPresenceState;\r\n(function (ChatUserPresenceState) {\r\n    ChatUserPresenceState[ChatUserPresenceState[\"offline\"] = 0] = \"offline\";\r\n    ChatUserPresenceState[ChatUserPresenceState[\"online\"] = 1] = \"online\";\r\n})(ChatUserPresenceState || (ChatUserPresenceState = {}));\r\nfunction scrollToBot(scrollContainer, options) {\r\n    var _a;\r\n    const timer = (_a = options === null || options === void 0 ? void 0 : options.timer) !== null && _a !== void 0 ? _a : 100, y = options === null || options === void 0 ? void 0 : options.y, cb = () => {\r\n        scrollContainer.scrollBy(0, y !== null && y !== void 0 ? y : scrollContainer.scrollHeight);\r\n    };\r\n    if (timer) {\r\n        setTimeout(cb, timer);\r\n    }\r\n    else {\r\n        cb();\r\n    }\r\n}\n\nexport { ChatMessageDirectionEnum as C, ChatMessageTypeEnum as a, ChatUserPresenceState as b, ChatUserActionStatusState as c, createTextMessage as d, ChatViewToShowEnum as e, filterContactBySearchValue as f, filterDialogsBySearchValue as g, filterDialogsByCategory as h, filterMessageBySearchValue as i, chatConvertWritingStatusToMessage as j, scrollToBot as s };\n","import { r as registerInstance, h } from './index-063f1606.js';\nimport './index-582bc2f2.js';\nimport { d as dialogs, a as contacts, M as MessageMock, c as categories } from './mock-5b093f4b.js';\n\nconst mobileChatCss = \".temp.sc-mobile-chat{width:414px;height:708px;overflow:hidden;margin:auto;border:5px solid #4c567d;border-radius:20px;position:absolute;left:0;right:0;-webkit-transform:translate(0, 15%);transform:translate(0, 15%);-webkit-box-shadow:15px 10px 40px 1px #4c567d;box-shadow:15px 10px 40px 1px #4c567d}.temp.sc-mobile-chat .m-chat-dialogs.sc-mobile-chat{height:63vh}.temp.sc-mobile-chat .personal-message.sc-mobile-chat{height:59vh}.sc-mobile-chat::-webkit-scrollbar{width:5px}.sc-mobile-chat::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,0.3);-webkit-border-radius:5px;border-radius:3px}.sc-mobile-chat::-webkit-scrollbar-thumb{-webkit-border-radius:10px;border-radius:10px;background:rgba(108, 108, 108, 0.8);-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,0.5)}.sc-mobile-chat::-webkit-scrollbar-thumb:window-inactive{background:rgba(106, 106, 106, 0.4)}\";\n\nconst MobileChat = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Выбираем какой контент показывать\r\n         * */\r\n        this.showContent = \"dialogs\";\r\n        // profile\r\n        // folders\r\n        // contacts\r\n        /**\r\n         * массив данных для диалогов\r\n         * */\r\n        this.dialogs = dialogs;\r\n        /**\r\n         * массив данных для контактов\r\n         * */\r\n        this.contacts = contacts;\r\n        /**\r\n         * массив данных личных диалогово\r\n         * */\r\n        this.message = MessageMock;\r\n    }\r\n    /**\r\n     * click to Link\r\n     * */\r\n    clickToLink({ detail }) {\r\n        return detail;\r\n        // console.log(detail);\r\n    }\r\n    /**\r\n     * click to Link\r\n     * */\r\n    clickToDialog({ detail }) {\r\n        return detail;\r\n        // console.log(\"clickToDialog\", detail);\r\n    }\r\n    /**\r\n     * click to Link\r\n     * */\r\n    clickToContact({ detail }) {\r\n        return detail;\r\n        // console.log(\"clickToContact\", detail);\r\n    }\r\n    /**\r\n     * Click to category filter\r\n     * */\r\n    clickToCategory({ detail }) {\r\n        return detail;\r\n        // console.log(\"clickToCategory\", detail);\r\n    }\r\n    /**\r\n     * Поиск контактов\r\n     * */\r\n    searchContact(e) {\r\n        return e;\r\n        // console.log(\"searchContact\", e);\r\n    }\r\n    /**\r\n     * Поиск среди диалогов\r\n     * */\r\n    searchDialogs(e) {\r\n        return e;\r\n        // console.log(\"searchDialogs\", e.detail.detail);\r\n    }\r\n    /**\r\n     * Поиск среди диалогов\r\n     * */\r\n    searchPersonalMessages(e) {\r\n        return e;\r\n        // console.log(\"searchPersonalMessages\", e);\r\n    }\r\n    /**\r\n     * click to add dialog\r\n     * */\r\n    clickToAddDialog() {\r\n        // console.log(\"clickToAddDialog\");\r\n    }\r\n    /**\r\n     * click to click To Show Dialogs\r\n     * */\r\n    clickToShowDialogs() {\r\n        // console.log(\"clickToShowDialogs\");\r\n    }\r\n    /**\r\n     * click to click To Show Contacts\r\n     * */\r\n    clickToShowContacts() {\r\n        // console.log(\"clickToShowContacts\");\r\n    }\r\n    /**\r\n     * click to click To Show MenuBar\r\n     * */\r\n    clickToShowMenuBar() {\r\n        // console.log(\"clickToShowMenuBar\");\r\n    }\r\n    // personal chat\r\n    /**\r\n     * click to click To Show MenuBar\r\n     * */\r\n    clickToUserProfile() {\r\n        // console.log(\"clickToUserProfile\");\r\n    }\r\n    cancelSearchPersonal() {\r\n        // console.log(\"cancelSearchPersonal\");\r\n    }\r\n    render() {\r\n        return h(\"div\", null, this.getContent(this.showContent));\r\n    }\r\n    componentWillLoad() {\r\n        this.dialogs = dialogs;\r\n    }\r\n    clickToShowDialogsHandler() {\r\n        // console.log('clickToShowDialogsHandler');\r\n    }\r\n    clickToShowFoldersHandler() {\r\n        // console.log('clickToShowFoldersHandler');\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    clickOnUserProfile() {\r\n        // console.log('clickOnUserProfile')\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    createFolderHandler(e) {\r\n        return e;\r\n        // console.log('createFolderHandler', e)\r\n    }\r\n    /**\r\n     * Метод для вывода определенного контента\r\n     * */\r\n    getContent(content) {\r\n        switch (content) {\r\n            case \"dialogs\":\r\n                return (h(\"mobile-dialogs\", { onClickToAddDialog: () => this.clickToAddDialog(), onClickToDialog: (item) => this.clickToDialog(item), onClickToCategory: (item) => this.clickToCategory(item), onClickToShowDialogs: () => this.clickToShowDialogs(), onClickToShowContacts: () => this.clickToShowContacts(), onClickToShowMenuBar: () => this.clickToShowMenuBar(), onSearchDialogs: (detail) => this.searchDialogs({ detail }), onCancelSearchPersonal: () => this.cancelSearchPersonal(), categories: categories, dialogs: this.dialogs }));\r\n            case \"personal\":\r\n                return (h(\"mobile-personal\", { onClickToShowDialogs: () => this.clickToShowDialogs(), onClickToUserProfile: () => this.clickToUserProfile(), message: this.message, onSearchPersonalMessages: (detail) => this.searchPersonalMessages({ detail }), onCancelSearchPersonal: () => this.cancelSearchPersonal() }));\r\n            case \"profile\":\r\n                return (h(\"s-adam-profile\", { theme: \"mobile\", categories: categories, onClickToShowDialogs: () => this.clickToShowDialogsHandler(), onClickToShowFolders: () => this.clickToShowFoldersHandler() }));\r\n            case \"folders\":\r\n                return (h(\"user-folders\", { onClickToUserProfile: () => this.clickOnUserProfile(), onCreateFolder: (e) => this.createFolderHandler(e.detail), dialogs: dialogs, theme: \"mobile\" }));\r\n            case \"contacts\":\r\n                return (h(\"contacts-list\", { contacts: this.contacts, onSearchContact: (detail) => this.searchContact({ detail }), onClickToShowDialogs: () => this.clickToShowDialogs(), onClickToShowContacts: () => this.clickToShowContacts(), onClickToShowMenuBar: () => this.clickToShowMenuBar(), onClickToContact: (item) => this.clickToContact(item) }));\r\n            default:\r\n                return h(\"div\", null, \"no content\");\r\n        }\r\n    }\r\n};\r\nMobileChat.style = mobileChatCss;\n\nexport { MobileChat as mobile_chat };\n"],"sourceRoot":"webpack:///"}