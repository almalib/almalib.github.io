{"version":3,"sources":["./node_modules/stencil-chat/dist/esm/module-chat.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkG;AACoB;AAC4F;;AAElN;;AAEA;AACA;AACA,QAAQ,4DAAgB;AACxB,wBAAwB,mDAAW;AACnC,uBAAuB,mDAAO;AAC9B,0BAA0B,mDAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C,+BAA+B,mDAAO;AACtC,kDAAkD,mDAAc,GAAG,mDAAiB,GAAG,mDAAc;AACrG;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAW;AACvB,SAAS;AACT;AACA;AACA,gBAAgB,4DAAC,qBAAqB,yCAAyC,mDAAU,mCAAmC,mDAAQ,iQAAiQ,mDAAyB,mCAAmC,mDAA0B,EAAE;AAC7d;AACA;AACA,wBAAwB,mDAAW,iDAAiD,aAAa,iCAAiC,oDAAwB;AAC1J,iCAAiC,oDAAmB;AACpD,qBAAqB,YAAY,IAAI,gBAAgB;AACrD,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAiB;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,QAAQ,4DAAU,OAAO;AACzC;AACA;;AAEqC","file":"stencil-module-chat-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, f as forceUpdate, h, g as getElement } from './index-53235049.js';\nimport { C as ChatMessageDirectionEnum, a as ChatMessageTypeEnum, e as createTextMessage } from './index-bfa1c413.js';\nimport { M as MessageMock, d as dialogs, D as DictionaryMock, b as DictionaryMockEng, a as categories, c as contacts, e as disableInnerSearchDialogs, f as disableInnerSearchMessages } from './mock-2d06f4a2.js';\n\nconst moduleChatCss = \"\";\n\nconst ModuleChat = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.messages = MessageMock;\r\n        this.dialogs = dialogs;\r\n        this.dictionary = DictionaryMock;\r\n    }\r\n    componentDidLoad() {\r\n        window['ref'] = this.ref;\r\n        setInterval(() => {\r\n            // console.log(\r\n            //   'messages setInterval',\r\n            //\r\n            // );\r\n            this.messages = [...MessageMock];\r\n            this.dialogs = [...dialogs];\r\n            this.dictionary = this.dictionary === DictionaryMock ? DictionaryMockEng : DictionaryMock;\r\n            // console.log(\r\n            //   'updated dictionary',\r\n            //   this.dictionary\r\n            // );\r\n            // @ts-ignore\r\n            forceUpdate(this.ref2);\r\n        }, 10000);\r\n    }\r\n    render() {\r\n        return (h(\"cnt-module-chat\", { ref: (el) => this.ref = el, categories: categories, dialogs: this.dialogs, contacts: contacts, dictionary: this.dictionary, message: this.messages, onClickToDialog: (ev) => this.clickToDialog(ev.detail), onSendTextMessage: (ev) => this.sendTextMessage(ev.detail), onShowFullChat: (ev) => this.showFullChat(ev.detail), disableInnerSearchDialogsState: disableInnerSearchDialogs, disableInnerSearchMessagesState: disableInnerSearchMessages }));\r\n    }\r\n    clickToDialog(dialog) {\r\n        this.messages = MessageMock.map((message) => (Object.assign(Object.assign({}, message), { content: (message.direction !== ChatMessageDirectionEnum.center &&\r\n                message.type === ChatMessageTypeEnum.text)\r\n                ? `${dialog.name}> ${message.content}`\r\n                : message.content })));\r\n        // console.log(\r\n        //   'clickToDialog [12]',\r\n        //   dialog\r\n        // );\r\n    }\r\n    showFullChat(ev) {\r\n        return ev;\r\n        // console.log(\r\n        //   'showFullChat',\r\n        //   ev\r\n        // )\r\n    }\r\n    sendTextMessage(message) {\r\n        // console.log(\r\n        //   'sendTextMessage [2]',\r\n        //   message\r\n        // );\r\n        this.messages = [\r\n            ...this.messages,\r\n            createTextMessage(message, {\r\n                uid: \"test-id-2\",\r\n                icon: \"https://via.placeholder.com/60x60?text=User\",\r\n                name: \"Адам\",\r\n                phone: \"79291234567\",\r\n            })\r\n        ];\r\n    }\r\n    get ref2() { return getElement(this); }\r\n};\r\nModuleChat.style = moduleChatCss;\n\nexport { ModuleChat as module_chat };\n"],"sourceRoot":"webpack:///"}